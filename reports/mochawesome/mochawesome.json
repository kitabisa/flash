{
  "stats": {
    "suites": 15,
    "tests": 27,
    "passes": 27,
    "pending": 0,
    "failures": 0,
    "start": "2022-05-20T12:44:39.889Z",
    "end": "2022-05-20T12:45:02.997Z",
    "duration": 23108,
    "testsRegistered": 27,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "445fe629-bb38-48fc-9d5d-83940750a8d6",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "5a296cda-5500-4f4e-be08-be7cc6e61797",
          "title": "Exchange Token API",
          "fullFile": "/home/runner/work/flash/flash/test/suite_accountService.js",
          "file": "/test/suite_accountService.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: pre_request in \"Exchange Token API\"",
              "fullTitle": "Exchange Token API \"before all\" hook: pre_request in \"Exchange Token API\"",
              "timedOut": false,
              "duration": 1098,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const rd = await wong.wongAccount()\nconsole.log('Status Code:', rd.status);\nconst res = rd.body.data[0]\nglobal.ktbs_token = res.token",
              "err": {},
              "uuid": "1e7eebee-7560-4cf7-85b0-f860e16cf93e",
              "parentUUID": "5a296cda-5500-4f4e-be08-be7cc6e61797",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "when user input valid token then user got response 200",
              "fullTitle": "Exchange Token API when user input valid token then user got response 200",
              "timedOut": false,
              "duration": 935,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await exchange_token.exchangeTokenAccount(global.ktbs_token);\nif(res.status !== 200){\n    console.log(\"exchange_token: \" + res.status + \"||\" + res.body.response_desc.id)\n}\nassert(res.status).to.equal(200);\nassert(res.body.data[0]).to.have.property('access_token')\nassert(res.body.data[0]).to.have.property('refresh_token')\nassert(res.body.data[0]).to.have.property('expires_in')",
              "err": {},
              "uuid": "268efa27-2683-4858-8482-be2bd0824440",
              "parentUUID": "5a296cda-5500-4f4e-be08-be7cc6e61797",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "when user input wrong token, then user got response error",
              "fullTitle": "Exchange Token API when user input wrong token, then user got response error",
              "timedOut": false,
              "duration": 1134,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await exchange_token.exchangeTokenAccount('eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJ1bXhfUFZiQ3lTV2o5SG5MRHJ0bEJ3X1BLTnlFcVJtWTNpQ3BSMTBlMFpvIn0.eyJleHAiOjE2NTI4OTEwNTEsImlhdCI6MTY1Mjg1NTA1MSwianRpIjoiYmMwMzhiZWUtYzNhNi00YjYxLTlkZjMtYmQ3NjExZWQwMTI0IiwiaXNzIjoiaHR0cDovL2tleWNsb2FrLnN0Zy5rdC5qZy9hdXRoL3JlYWxtcy9raXRhamFnYSIsImF1ZCI6ImFjY291bnQiLCJzdWIiOiIwNTY5ZjM5NS1iZWUxLTQxMzItOWYzZS1lZDM3ODAyMzY2ODMiLCJ0eXAiOiJCZWFyZXIiLCJhenAiOiJrb25nIiwic2Vzc2lvbl9zdGF0ZSI6ImYwZWU1YzI3LTliODYtNDg1Mi1iYmE2LTI1M2ZkN2RlZDFkMCIsImFjciI6IjEiLCJyZWFsbV9hY2Nlc3MiOnsicm9sZXMiOlsiZGVmYXVsdC1yb2xlcy1raXRhamFnYSIsIm9mZmxpbmVfYWNjZXNzIiwidW1hX2F1dGhvcml6YXRpb24iXX0sInJlc291cmNlX2FjY2VzcyI6eyJhY2NvdW50Ijp7InJvbGVzIjpbIm1hbmFnZS1hY2NvdW50IiwibWFuYWdlLWFjY291bnQtbGlua3MiLCJ2aWV3LXByb2ZpbGUiXX19LCJzY29wZSI6InByb2ZpbGUgZW1haWwiLCJzaWQiOiJmMGVlNWMyNy05Yjg2LTQ4NTItYmJhNi0yNTNmZDdkZWQxZDAiLCJraXRhYmlzYV91c2VyX2lkIjoiNSIsImVtYWlsX3ZlcmlmaWVkIjp0cnVlLCJuYW1lIjoiS2l0YWphZ2EgVGVzdCBBamEiLCJraXRhYmlzYV9zZWNvbmRhcnlfaWQiOiI1NDk0ZTg3ODQ2MTJjMWY1ZDNhODI4ZjAyYWNkNzRmNSIsInBob25lX251bWJlciI6IjYyODEyMzQ1Njc4OTAiLCJwcmVmZXJyZWRfdXNlcm5hbWUiOiJraXRhamFnYS10ZXN0QGtpdGFqYWdhLmlkIiwiZ2l2ZW5fbmFtZSI6IktpdGFqYWdhIiwiZmFtaWx5X')\nassert(res.status).to.equal(502)",
              "err": {},
              "uuid": "4526737d-cef1-464a-90a8-fa2252318637",
              "parentUUID": "5a296cda-5500-4f4e-be08-be7cc6e61797",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "when user input empty token, then user got response error",
              "fullTitle": "Exchange Token API when user input empty token, then user got response error",
              "timedOut": false,
              "duration": 758,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await exchange_token.exchangeTokenAccount('')\nassert(res.status).to.equal(401)",
              "err": {},
              "uuid": "0816f86a-7021-4af9-a307-a764e7056226",
              "parentUUID": "5a296cda-5500-4f4e-be08-be7cc6e61797",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "268efa27-2683-4858-8482-be2bd0824440",
            "4526737d-cef1-464a-90a8-fa2252318637",
            "0816f86a-7021-4af9-a307-a764e7056226"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2827,
          "root": false,
          "rootEmpty": false,
          "_timeout": 180000
        },
        {
          "uuid": "55fedff1-721c-47ca-8e42-d7e3824a3950",
          "title": "API Service Group",
          "fullFile": "/home/runner/work/flash/flash/test/suite_productService.js",
          "file": "/test/suite_productService.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "c7ec6ab6-734b-407e-966e-3731b84dd2bf",
              "title": "Create Service Product",
              "fullFile": "/home/runner/work/flash/flash/test/suite_productService.js",
              "file": "/test/suite_productService.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "when user input corect data then user got response 200",
                  "fullTitle": "API Service Group Create Service Product when user input corect data then user got response 200",
                  "timedOut": false,
                  "duration": 761,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await create.createServiceGroup(datas.service_Group.code, datas.service_Group.name, datas.service_Group.description)   \nif(res.status !==200){\n    console.log(\"create data : \"+res.status+\"||\" +res.text)\n}         \nassert(res.status).to.equal(200)\nglobal.ids = res.body.data[0].id\nglobal.names = res.body.data[0].name\nglobal.desc = res.body.data[0].description\nglobal.codes = res.body.data[0].code\nassert(res.body.data[0]).to.have.property(\"id\")\nassert(res.body.data[0]).to.have.property(\"code\")\nassert(res.body.data[0]).to.have.property(\"name\")\nassert(res.body.data[0]).to.have.property(\"description\")\nassert(res.body.data[0]).to.have.property(\"is_active\")",
                  "err": {},
                  "uuid": "2c90cfd5-79d7-4c2a-8fd2-9c5f5dfd3f43",
                  "parentUUID": "c7ec6ab6-734b-407e-966e-3731b84dd2bf",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "when user input existing data, then user got response error",
                  "fullTitle": "API Service Group Create Service Product when user input existing data, then user got response error",
                  "timedOut": false,
                  "duration": 757,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await create.createServiceGroup('TEST66', 'Alda', 'this is triger from automation tools')\nassert(res.status).to.equal(400)",
                  "err": {},
                  "uuid": "6491da1a-8026-4451-9911-0b2766f44ffb",
                  "parentUUID": "c7ec6ab6-734b-407e-966e-3731b84dd2bf",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "when user input data using existing code data, then user got response error",
                  "fullTitle": "API Service Group Create Service Product when user input data using existing code data, then user got response error",
                  "timedOut": false,
                  "duration": 740,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await create.createServiceGroup('TEST66', datas.service_Group.name, datas.service_Group.description)\nassert(res.status).to.equal(400)",
                  "err": {},
                  "uuid": "a3d641ba-d0ca-461c-b830-b6a0c768ef4d",
                  "parentUUID": "c7ec6ab6-734b-407e-966e-3731b84dd2bf",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2c90cfd5-79d7-4c2a-8fd2-9c5f5dfd3f43",
                "6491da1a-8026-4451-9911-0b2766f44ffb",
                "a3d641ba-d0ca-461c-b830-b6a0c768ef4d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2258,
              "root": false,
              "rootEmpty": false,
              "_timeout": 180000
            },
            {
              "uuid": "be4ac560-2b26-4913-b0cc-5a4a8c8b4398",
              "title": "Get All Service Group",
              "fullFile": "/home/runner/work/flash/flash/test/suite_productService.js",
              "file": "/test/suite_productService.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "when user hit api get all then user got response 200 and all data will be appears",
                  "fullTitle": "API Service Group Get All Service Group when user hit api get all then user got response 200 and all data will be appears",
                  "timedOut": false,
                  "duration": 1463,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await getAll.getallServiceGroup()\nif(res.status !==200){\n    console.log(\"getall data : \"+res.status+\"||\" +res.body.text)\n}\nassert(res.status).to.equal(200)\nassert(res.body.data[0]).to.have.property(\"id\")\nassert(res.body.data[0]).to.have.property(\"code\")\nassert(res.body.data[0]).to.have.property(\"name\")\nassert(res.body.data[0]).to.have.property(\"description\")\nassert(res.body.data[0]).to.have.property(\"is_active\")\nglobal.ids1 = res.body.data[1].id\nglobal.names1 = res.body.data[1].name\nglobal.desc1 = res.body.data[1].description\nglobal.codes1 = res.body.data[1].code",
                  "err": {},
                  "uuid": "7b4b2433-4528-4c0e-97c1-7f6c54837ded",
                  "parentUUID": "be4ac560-2b26-4913-b0cc-5a4a8c8b4398",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7b4b2433-4528-4c0e-97c1-7f6c54837ded"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1463,
              "root": false,
              "rootEmpty": false,
              "_timeout": 180000
            },
            {
              "uuid": "2ad7658f-45f8-4ebe-89ce-ce6a4cf955fa",
              "title": "Get All Public Service Group ",
              "fullFile": "/home/runner/work/flash/flash/test/suite_productService.js",
              "file": "/test/suite_productService.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "when user hit api get all public then user got response 200 and all data will be appears",
                  "fullTitle": "API Service Group Get All Public Service Group  when user hit api get all public then user got response 200 and all data will be appears",
                  "timedOut": false,
                  "duration": 750,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await getAllpublic.getallpublicServiceGroup()\nif(res.status !==200){\n    console.log(\"getall data : \"+res.status+\"||\" +res.body.text)\n}\nassert(res.status).to.equal(200)\nassert(res.body.data[0]).to.have.property(\"id\")\nassert(res.body.data[0]).to.have.property(\"code\")\nassert(res.body.data[0]).to.have.property(\"name\")\nassert(res.body.data[0]).to.have.property(\"description\")\nassert(res.body.data[0]).to.have.property(\"is_active\")",
                  "err": {},
                  "uuid": "39939a33-1214-4c75-9109-b90e17ac6ca5",
                  "parentUUID": "2ad7658f-45f8-4ebe-89ce-ce6a4cf955fa",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "39939a33-1214-4c75-9109-b90e17ac6ca5"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 750,
              "root": false,
              "rootEmpty": false,
              "_timeout": 180000
            },
            {
              "uuid": "dde90d7f-6fa4-4ef3-a2fb-0113d694ece6",
              "title": "Get Detail Public Service Group",
              "fullFile": "/home/runner/work/flash/flash/test/suite_productService.js",
              "file": "/test/suite_productService.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "when user hit api get detail public then user got response 200 and all data will be appears",
                  "fullTitle": "API Service Group Get Detail Public Service Group when user hit api get detail public then user got response 200 and all data will be appears",
                  "timedOut": false,
                  "duration": 734,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await getdetailpublic.getdetailpublicServiceGroup(global.ids)\nif(res.status !==200){\n    console.log(\"getdetailpublic data : \"+res.status+\"||\" +res.body.text)\n}\nassert(res.status).to.equal(200)\nassert(res.body.data[0]).to.have.property(\"id\")\nassert(res.body.data[0]).to.have.property(\"code\")\nassert(res.body.data[0]).to.have.property(\"name\")\nassert(res.body.data[0]).to.have.property(\"description\")\nassert(res.body.data[0]).to.have.property(\"is_active\")",
                  "err": {},
                  "uuid": "e6d0a6f9-4fa8-4243-87f7-69ba2ae9ffbd",
                  "parentUUID": "dde90d7f-6fa4-4ef3-a2fb-0113d694ece6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "when user hit api get detail public with wrong id then user got response error",
                  "fullTitle": "API Service Group Get Detail Public Service Group when user hit api get detail public with wrong id then user got response error",
                  "timedOut": false,
                  "duration": 778,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await getdetailpublic.getdetailpublicServiceGroup(datas.service_Group.wrongid)\nassert(res.status).to.equal(404)\nassert(res.body.response_desc).to.have.property(\"id\").to.equal(\"error data tidak ditemukan\")\nassert(res.body.response_desc).to.have.property(\"en\")",
                  "err": {},
                  "uuid": "32060a07-1e7a-4de1-8db8-ba53693362a4",
                  "parentUUID": "dde90d7f-6fa4-4ef3-a2fb-0113d694ece6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e6d0a6f9-4fa8-4243-87f7-69ba2ae9ffbd",
                "32060a07-1e7a-4de1-8db8-ba53693362a4"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1512,
              "root": false,
              "rootEmpty": false,
              "_timeout": 180000
            },
            {
              "uuid": "c72e002a-ea25-421b-a475-ed089a14a2e4",
              "title": "Get Detail Service Group",
              "fullFile": "/home/runner/work/flash/flash/test/suite_productService.js",
              "file": "/test/suite_productService.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "when user hit api get detail then user got response 200 and all data will be appears",
                  "fullTitle": "API Service Group Get Detail Service Group when user hit api get detail then user got response 200 and all data will be appears",
                  "timedOut": false,
                  "duration": 717,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await getdetail.getdetailServiceGroup(global.ids)\nif(res.status !==200){\n    console.log(\"getdetail data : \"+res.status+\"||\" +res.body.text)\n}\nassert(res.status).to.equal(200)\nassert(res.body.data[0]).to.have.property(\"id\")\nassert(res.body.data[0]).to.have.property(\"code\")\nassert(res.body.data[0]).to.have.property(\"name\")\nassert(res.body.data[0]).to.have.property(\"description\")\nassert(res.body.data[0]).to.have.property(\"is_active\")",
                  "err": {},
                  "uuid": "8c49e91b-a050-4fda-ad5b-194f5c3c6bc4",
                  "parentUUID": "c72e002a-ea25-421b-a475-ed089a14a2e4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "when user hit api get detail with wrong id then user got response error",
                  "fullTitle": "API Service Group Get Detail Service Group when user hit api get detail with wrong id then user got response error",
                  "timedOut": false,
                  "duration": 765,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await getdetail.getdetailServiceGroup(datas.service_Group.wrongid)\nassert(res.status).to.equal(404)\nassert(res.body.response_desc).to.have.property(\"id\").to.equal(\"error data tidak ditemukan\")\nassert(res.body.response_desc).to.have.property(\"en\")",
                  "err": {},
                  "uuid": "2d811e5a-bb5d-4764-a66f-e18b47c97316",
                  "parentUUID": "c72e002a-ea25-421b-a475-ed089a14a2e4",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8c49e91b-a050-4fda-ad5b-194f5c3c6bc4",
                "2d811e5a-bb5d-4764-a66f-e18b47c97316"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1482,
              "root": false,
              "rootEmpty": false,
              "_timeout": 180000
            },
            {
              "uuid": "783a9cdb-d9cb-42d2-b4dd-a2f068650d73",
              "title": "Update Service Product",
              "fullFile": "/home/runner/work/flash/flash/test/suite_productService.js",
              "file": "/test/suite_productService.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "when user input corect data then user got response 200",
                  "fullTitle": "API Service Group Update Service Product when user input corect data then user got response 200",
                  "timedOut": false,
                  "duration": 728,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await update.updateServiceGroup(global.ids, datas.service_Group.code, datas.service_Group.name, datas.service_Group.description)   \nif(res.status !==200){\n    console.log(\"update data : \"+res.status+\"||\" +res.body.text)\n}\nassert(res.status).to.equal(200)\nassert(res.body.data[0]).to.have.property(\"id\")\nassert(res.body.data[0]).to.have.property(\"code\")\nassert(res.body.data[0]).to.have.property(\"name\")\nassert(res.body.data[0]).to.have.property(\"description\")\nassert(res.body.data[0]).to.have.property(\"is_active\")",
                  "err": {},
                  "uuid": "d286c111-c507-4bd2-bc5c-d989b457ccc2",
                  "parentUUID": "783a9cdb-d9cb-42d2-b4dd-a2f068650d73",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "when user input different code and same description and same name then user got response 200",
                  "fullTitle": "API Service Group Update Service Product when user input different code and same description and same name then user got response 200",
                  "timedOut": false,
                  "duration": 718,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await update.updateServiceGroup(global.ids, datas.service_Group.code, global.names, global.desc)   \nif(res.status !==200){\n    console.log(\"update data : \"+res.status+\"||\" +res.body.text)\n}\nassert(res.status).to.equal(200)\nassert(res.body.data[0]).to.have.property(\"id\")\nassert(res.body.data[0]).to.have.property(\"code\")\nassert(res.body.data[0]).to.have.property(\"name\")\nassert(res.body.data[0]).to.have.property(\"description\")\nassert(res.body.data[0]).to.have.property(\"is_active\")",
                  "err": {},
                  "uuid": "b4ec1404-de6c-438a-8ce9-c47b7ec5dc16",
                  "parentUUID": "783a9cdb-d9cb-42d2-b4dd-a2f068650d73",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "when user input different name and same code then user got response 200",
                  "fullTitle": "API Service Group Update Service Product when user input different name and same code then user got response 200",
                  "timedOut": false,
                  "duration": 716,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await update.updateServiceGroup(global.ids, global.codes, datas.service_Group.name, global.desc)   \nif(res.status !==200){\n    console.log(\"update data : \"+res.status+\"||\" +res.body.text)\n}\nassert(res.status).to.equal(200)\nassert(res.body.data[0]).to.have.property(\"id\")\nassert(res.body.data[0]).to.have.property(\"code\")\nassert(res.body.data[0]).to.have.property(\"name\")\nassert(res.body.data[0]).to.have.property(\"description\")\nassert(res.body.data[0]).to.have.property(\"is_active\")",
                  "err": {},
                  "uuid": "f2a5b1b3-f94d-4ff8-ba87-a4c0333891bf",
                  "parentUUID": "783a9cdb-d9cb-42d2-b4dd-a2f068650d73",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "when user input different description and same code and same name then user got response 200",
                  "fullTitle": "API Service Group Update Service Product when user input different description and same code and same name then user got response 200",
                  "timedOut": false,
                  "duration": 750,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await update.updateServiceGroup(global.ids, global.codes, global.names, datas.service_Group.description)   \nif(res.status !==200){\n    console.log(\"update data : \"+res.status+\"||\" +res.body.text)\n}\nassert(res.status).to.equal(200)\nassert(res.body.data[0]).to.have.property(\"id\")\nassert(res.body.data[0]).to.have.property(\"code\")\nassert(res.body.data[0]).to.have.property(\"name\")\nassert(res.body.data[0]).to.have.property(\"description\")\nassert(res.body.data[0]).to.have.property(\"is_active\")",
                  "err": {},
                  "uuid": "eb3b4b7c-b3f3-4249-a45c-da4a860f5b43",
                  "parentUUID": "783a9cdb-d9cb-42d2-b4dd-a2f068650d73",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "when user input same data, then user got response error",
                  "fullTitle": "API Service Group Update Service Product when user input same data, then user got response error",
                  "timedOut": false,
                  "duration": 714,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await update.updateServiceGroup(global.ids, global.codes1, global.names1, global.desc1)   \nassert(res.status).to.equal(500)",
                  "err": {},
                  "uuid": "ee7d147c-d817-46f0-ad5b-69fadd372599",
                  "parentUUID": "783a9cdb-d9cb-42d2-b4dd-a2f068650d73",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "when user input data using existing code data, then user got response error",
                  "fullTitle": "API Service Group Update Service Product when user input data using existing code data, then user got response error",
                  "timedOut": false,
                  "duration": 718,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await update.updateServiceGroup(global.ids1, global.codes, datas.service_Group.name, datas.service_Group.description)   \nassert(res.status).to.equal(500)",
                  "err": {},
                  "uuid": "3e27e8db-c549-4758-903b-b2af3eda7999",
                  "parentUUID": "783a9cdb-d9cb-42d2-b4dd-a2f068650d73",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d286c111-c507-4bd2-bc5c-d989b457ccc2",
                "b4ec1404-de6c-438a-8ce9-c47b7ec5dc16",
                "f2a5b1b3-f94d-4ff8-ba87-a4c0333891bf",
                "eb3b4b7c-b3f3-4249-a45c-da4a860f5b43",
                "ee7d147c-d817-46f0-ad5b-69fadd372599",
                "3e27e8db-c549-4758-903b-b2af3eda7999"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 4344,
              "root": false,
              "rootEmpty": false,
              "_timeout": 180000
            },
            {
              "uuid": "a426a677-3dd7-48ae-9330-bf556df2ba2f",
              "title": "Delete data Service Group",
              "fullFile": "/home/runner/work/flash/flash/test/suite_productService.js",
              "file": "/test/suite_productService.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "when user hit api delete with correct id then user got response 200 and data will be deleted",
                  "fullTitle": "API Service Group Delete data Service Group when user hit api delete with correct id then user got response 200 and data will be deleted",
                  "timedOut": false,
                  "duration": 738,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await deleted.deleteServiceGroup(global.ids)\nassert(res.status).to.equal(200)",
                  "err": {},
                  "uuid": "8f64dea4-6d2b-4474-b8b8-bd799ebe7370",
                  "parentUUID": "a426a677-3dd7-48ae-9330-bf556df2ba2f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "when user hit api delete with wrong id then user got response error",
                  "fullTitle": "API Service Group Delete data Service Group when user hit api delete with wrong id then user got response error",
                  "timedOut": false,
                  "duration": 719,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await deleted.deleteServiceGroup(datas.service_Group.wrongid)\nassert(res.status).to.equal(404)",
                  "err": {},
                  "uuid": "30f298b4-f86c-44b6-87c7-70904d992e0f",
                  "parentUUID": "a426a677-3dd7-48ae-9330-bf556df2ba2f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8f64dea4-6d2b-4474-b8b8-bd799ebe7370",
                "30f298b4-f86c-44b6-87c7-70904d992e0f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1457,
              "root": false,
              "rootEmpty": false,
              "_timeout": 180000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 180000
        },
        {
          "uuid": "97344e58-6f6e-412a-9fb9-eaafcf81b5df",
          "title": "API Extension Clause",
          "fullFile": "/home/runner/work/flash/flash/test/suite_productService.js",
          "file": "/test/suite_productService.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "abec09ae-3320-424b-ad65-0aa5e91402ac",
              "title": "Create ExtensionClause",
              "fullFile": "/home/runner/work/flash/flash/test/suite_productService.js",
              "file": "/test/suite_productService.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "when user input corect data then user got response 200",
                  "fullTitle": "API Extension Clause Create ExtensionClause when user input corect data then user got response 200",
                  "timedOut": false,
                  "duration": 779,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await EC_create.createExtensionClause(datas.Extension_clause.code, datas.service_Group.name, datas.service_Group.description, global.codes)\nassert(res.status).to.equal(200)\nassert(res.body.data[0]).to.have.property(\"id\")\nassert(res.body.data[0]).to.have.property(\"service_group_id\").to.equal(global.ids)\nassert(res.body.data[0]).to.have.property(\"service_group_code\").to.equal(global.codes)\nassert(res.body.data[0]).to.have.property(\"code\")\nassert(res.body.data[0]).to.have.property(\"name\")\nassert(res.body.data[0]).to.have.property(\"description\")\nassert(res.body.data[0]).to.have.property(\"is_active\").to.equal(true)\nglobal.ECids = res.body.data[0].id",
                  "err": {},
                  "uuid": "43930a89-c11b-4261-91eb-82dd9365cf22",
                  "parentUUID": "abec09ae-3320-424b-ad65-0aa5e91402ac",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "43930a89-c11b-4261-91eb-82dd9365cf22"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 779,
              "root": false,
              "rootEmpty": false,
              "_timeout": 180000
            },
            {
              "uuid": "a31b5f8a-06f0-42a4-b443-61b5d1cc3d16",
              "title": "Get all data Extension Clause",
              "fullFile": "/home/runner/work/flash/flash/test/suite_productService.js",
              "file": "/test/suite_productService.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "when user hit api get all then user got response 200 and all data will be appears",
                  "fullTitle": "API Extension Clause Get all data Extension Clause when user hit api get all then user got response 200 and all data will be appears",
                  "timedOut": false,
                  "duration": 1458,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await EC_Getall.getallExtensionClause()\nassert(res.status).to.equal(200)\nassert(res.body.data[0]).to.have.property(\"id\")\nassert(res.body.data[0]).to.have.property(\"service_group_id\")\nassert(res.body.data[0]).to.have.property(\"service_group_code\")\nassert(res.body.data[0]).to.have.property(\"code\")\nassert(res.body.data[0]).to.have.property(\"name\")\nassert(res.body.data[0]).to.have.property(\"description\")\nassert(res.body.data[0]).to.have.property(\"is_active\")\nglobal.ECids1 = res.body.data[1].id\nglobal.ECserviceCode1 = res.body.data[1].service_group_code\nglobal.code1 = res.body.data[0].code\nglobal.name1 = res.body.data[0].name",
                  "err": {},
                  "uuid": "42511626-1013-45c0-80b3-bc42388394b4",
                  "parentUUID": "a31b5f8a-06f0-42a4-b443-61b5d1cc3d16",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "42511626-1013-45c0-80b3-bc42388394b4"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1458,
              "root": false,
              "rootEmpty": false,
              "_timeout": 180000
            },
            {
              "uuid": "cd5e48d5-b50b-4e1c-97de-f2bad62b913b",
              "title": "Delete data Extension Clause",
              "fullFile": "/home/runner/work/flash/flash/test/suite_productService.js",
              "file": "/test/suite_productService.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "when user hit api delete with correct id then user got response 200 and data will be deleted",
                  "fullTitle": "API Extension Clause Delete data Extension Clause when user hit api delete with correct id then user got response 200 and data will be deleted",
                  "timedOut": false,
                  "duration": 740,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await EC_Delete.deleteExtensionClause(global.ECids)\nassert(res.status).to.equal(200)",
                  "err": {},
                  "uuid": "130ecc09-bd7d-49c4-a238-a9076958f27a",
                  "parentUUID": "cd5e48d5-b50b-4e1c-97de-f2bad62b913b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "when user hit api delete with wrong id then user got response error",
                  "fullTitle": "API Extension Clause Delete data Extension Clause when user hit api delete with wrong id then user got response error",
                  "timedOut": false,
                  "duration": 726,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await EC_Delete.deleteExtensionClause(datas.Extension_clause.wrongid)\nassert(res.status).to.equal(400)\nassert(res.body.response_desc.id).to.equal('Product Extension Clause ID Tidak Ditemukan')",
                  "err": {},
                  "uuid": "bc086da7-4372-4b33-bea7-6ee5950ace0b",
                  "parentUUID": "cd5e48d5-b50b-4e1c-97de-f2bad62b913b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "130ecc09-bd7d-49c4-a238-a9076958f27a",
                "bc086da7-4372-4b33-bea7-6ee5950ace0b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1466,
              "root": false,
              "rootEmpty": false,
              "_timeout": 180000
            },
            {
              "uuid": "71df9b1a-adcd-4235-b12a-cf1b46da2fba",
              "title": "Get Detail Extension Clause",
              "fullFile": "/home/runner/work/flash/flash/test/suite_productService.js",
              "file": "/test/suite_productService.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "when user hit api get detail then user got response 200 and all data will be appears",
                  "fullTitle": "API Extension Clause Get Detail Extension Clause when user hit api get detail then user got response 200 and all data will be appears",
                  "timedOut": false,
                  "duration": 736,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await EC_Getdetail.getdetailExtensionClause(global.ECids)\nassert(res.status).to.equal(200)\nassert(res.body.data[0]).to.have.property(\"id\").to.equal(global.ECids)\nassert(res.body.data[0]).to.have.property(\"service_group_id\").to.equal(global.ids)\nassert(res.body.data[0]).to.have.property(\"service_group_code\").to.equal(global.codes)\nassert(res.body.data[0]).to.have.property(\"code\")\nassert(res.body.data[0]).to.have.property(\"name\")\nassert(res.body.data[0]).to.have.property(\"description\")\nassert(res.body.data[0]).to.have.property(\"is_active\").to.equal(false)",
                  "err": {},
                  "uuid": "3954597d-959d-42c1-852c-2681e269788b",
                  "parentUUID": "71df9b1a-adcd-4235-b12a-cf1b46da2fba",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "when user hit api get detail with wrong id then user got response error",
                  "fullTitle": "API Extension Clause Get Detail Extension Clause when user hit api get detail with wrong id then user got response error",
                  "timedOut": false,
                  "duration": 722,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await EC_Getdetail.getdetailExtensionClause(datas.Extension_clause.wrongid)\nassert(res.status).to.equal(404)\nassert(res.body.response_desc.id).to.equal('error data tidak ditemukan')",
                  "err": {},
                  "uuid": "cac7fbdf-607f-4aa7-a708-046da65a758b",
                  "parentUUID": "71df9b1a-adcd-4235-b12a-cf1b46da2fba",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3954597d-959d-42c1-852c-2681e269788b",
                "cac7fbdf-607f-4aa7-a708-046da65a758b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1458,
              "root": false,
              "rootEmpty": false,
              "_timeout": 180000
            },
            {
              "uuid": "9057e782-169e-48d4-8e80-393ed40fed5f",
              "title": "update data Extension Clause",
              "fullFile": "/home/runner/work/flash/flash/test/suite_productService.js",
              "file": "/test/suite_productService.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "when user input corect data then user got response 200",
                  "fullTitle": "API Extension Clause update data Extension Clause when user input corect data then user got response 200",
                  "timedOut": false,
                  "duration": 729,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res =  await EC_Update.updateExtensionClause(global.ECids, global.code1, global.name1, datas.Extension_clause.description, global.ECserviceCode1)\nassert(res.status).to.equal(200)",
                  "err": {},
                  "uuid": "22371e9c-0ebe-4e14-b91d-f7b89feb23d0",
                  "parentUUID": "9057e782-169e-48d4-8e80-393ed40fed5f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "22371e9c-0ebe-4e14-b91d-f7b89feb23d0"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 729,
              "root": false,
              "rootEmpty": false,
              "_timeout": 180000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 180000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 180000
    }
  ],
  "meta": {
    "mocha": {
      "version": "9.2.2"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "reports/mochawesome/"
      },
      "version": "6.2.0"
    }
  }
}