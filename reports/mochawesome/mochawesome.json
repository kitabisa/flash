{
  "stats": {
    "suites": 22,
    "tests": 45,
    "passes": 45,
    "pending": 0,
    "failures": 0,
    "start": "2022-05-24T01:25:32.066Z",
    "end": "2022-05-24T01:26:01.184Z",
    "duration": 29118,
    "testsRegistered": 45,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "88f2f18b-b572-4267-931e-7cdeac61deb2",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "db4a9531-9283-4d66-908f-f90308fd33c1",
          "title": "Exchange Token API",
          "fullFile": "/home/runner/work/flash/flash/test/suite_accountService.js",
          "file": "/test/suite_accountService.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: pre_request in \"Exchange Token API\"",
              "fullTitle": "Exchange Token API \"before all\" hook: pre_request in \"Exchange Token API\"",
              "timedOut": false,
              "duration": 975,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const rd = await wong.wongAccount()\nconsole.log('Status Code:', rd.status);\nconst res = rd.body.data[0]\nglobal.ktbs_token = res.token",
              "err": {},
              "uuid": "f323a37e-c6ea-44de-902e-77c9fb7a88c3",
              "parentUUID": "db4a9531-9283-4d66-908f-f90308fd33c1",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "when user input valid token then user got response 200",
              "fullTitle": "Exchange Token API when user input valid token then user got response 200",
              "timedOut": false,
              "duration": 803,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await exchange_token.exchangeTokenAccount(global.ktbs_token);\nif(res.status !== 200){\n    console.log(\"exchange_token: \" + res.status + \"||\" + res.text)\n}\nassert(res.status).to.equal(200);\nassert(res.body.data[0]).to.have.property('access_token')\nassert(res.body.data[0]).to.have.property('refresh_token')\nassert(res.body.data[0]).to.have.property('expires_in')",
              "err": {},
              "uuid": "01b61fcd-9a31-4b85-a594-684df9b4692b",
              "parentUUID": "db4a9531-9283-4d66-908f-f90308fd33c1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "when user input wrong token, then user got response error",
              "fullTitle": "Exchange Token API when user input wrong token, then user got response error",
              "timedOut": false,
              "duration": 1020,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await exchange_token.exchangeTokenAccount('eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJ1bXhfUFZiQ3lTV2o5SG5MRHJ0bEJ3X1BLTnlFcVJtWTNpQ3BSMTBlMFpvIn0.eyJleHAiOjE2NTI4OTEwNTEsImlhdCI6MTY1Mjg1NTA1MSwianRpIjoiYmMwMzhiZWUtYzNhNi00YjYxLTlkZjMtYmQ3NjExZWQwMTI0IiwiaXNzIjoiaHR0cDovL2tleWNsb2FrLnN0Zy5rdC5qZy9hdXRoL3JlYWxtcy9raXRhamFnYSIsImF1ZCI6ImFjY291bnQiLCJzdWIiOiIwNTY5ZjM5NS1iZWUxLTQxMzItOWYzZS1lZDM3ODAyMzY2ODMiLCJ0eXAiOiJCZWFyZXIiLCJhenAiOiJrb25nIiwic2Vzc2lvbl9zdGF0ZSI6ImYwZWU1YzI3LTliODYtNDg1Mi1iYmE2LTI1M2ZkN2RlZDFkMCIsImFjciI6IjEiLCJyZWFsbV9hY2Nlc3MiOnsicm9sZXMiOlsiZGVmYXVsdC1yb2xlcy1raXRhamFnYSIsIm9mZmxpbmVfYWNjZXNzIiwidW1hX2F1dGhvcml6YXRpb24iXX0sInJlc291cmNlX2FjY2VzcyI6eyJhY2NvdW50Ijp7InJvbGVzIjpbIm1hbmFnZS1hY2NvdW50IiwibWFuYWdlLWFjY291bnQtbGlua3MiLCJ2aWV3LXByb2ZpbGUiXX19LCJzY29wZSI6InByb2ZpbGUgZW1haWwiLCJzaWQiOiJmMGVlNWMyNy05Yjg2LTQ4NTItYmJhNi0yNTNmZDdkZWQxZDAiLCJraXRhYmlzYV91c2VyX2lkIjoiNSIsImVtYWlsX3ZlcmlmaWVkIjp0cnVlLCJuYW1lIjoiS2l0YWphZ2EgVGVzdCBBamEiLCJraXRhYmlzYV9zZWNvbmRhcnlfaWQiOiI1NDk0ZTg3ODQ2MTJjMWY1ZDNhODI4ZjAyYWNkNzRmNSIsInBob25lX251bWJlciI6IjYyODEyMzQ1Njc4OTAiLCJwcmVmZXJyZWRfdXNlcm5hbWUiOiJraXRhamFnYS10ZXN0QGtpdGFqYWdhLmlkIiwiZ2l2ZW5fbmFtZSI6IktpdGFqYWdhIiwiZmFtaWx5X')\nassert(res.status).to.equal(502)",
              "err": {},
              "uuid": "91b83952-13b8-411c-8d15-aea0285db735",
              "parentUUID": "db4a9531-9283-4d66-908f-f90308fd33c1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "when user input empty token, then user got response error",
              "fullTitle": "Exchange Token API when user input empty token, then user got response error",
              "timedOut": false,
              "duration": 567,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await exchange_token.exchangeTokenAccount('')\nassert(res.status).to.equal(401)",
              "err": {},
              "uuid": "514a01ca-b6da-4a8a-97a2-d90a7310c1a4",
              "parentUUID": "db4a9531-9283-4d66-908f-f90308fd33c1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "01b61fcd-9a31-4b85-a594-684df9b4692b",
            "91b83952-13b8-411c-8d15-aea0285db735",
            "514a01ca-b6da-4a8a-97a2-d90a7310c1a4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2390,
          "root": false,
          "rootEmpty": false,
          "_timeout": 180000
        },
        {
          "uuid": "a7ffd53c-a7ac-4dc5-bfb5-cc448e2b7746",
          "title": "API Service Group",
          "fullFile": "/home/runner/work/flash/flash/test/suite_productService.js",
          "file": "/test/suite_productService.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "c907c91c-26a7-4536-8c9f-45a545283f34",
              "title": "Create Service Product",
              "fullFile": "/home/runner/work/flash/flash/test/suite_productService.js",
              "file": "/test/suite_productService.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "when user input corect data then user got response 200",
                  "fullTitle": "API Service Group Create Service Product when user input corect data then user got response 200",
                  "timedOut": false,
                  "duration": 570,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await create.createServiceGroup(datas.service_Group.code, datas.service_Group.name, datas.service_Group.description)   \nif(res.status !==200){\n    console.log(\"create data : \"+res.status+\"||\" +res.text)\n}         \nassert(res.status).to.equal(200)\nglobal.ids = res.body.data[0].id\nglobal.names = res.body.data[0].name\nglobal.desc = res.body.data[0].description\nglobal.codes = res.body.data[0].code\nassert(res.body.data[0]).to.have.property(\"id\")\nassert(res.body.data[0]).to.have.property(\"code\")\nassert(res.body.data[0]).to.have.property(\"name\")\nassert(res.body.data[0]).to.have.property(\"description\")\nassert(res.body.data[0]).to.have.property(\"is_active\")",
                  "err": {},
                  "uuid": "917e268e-fb4d-49c4-93ca-8938aa1fa6c8",
                  "parentUUID": "c907c91c-26a7-4536-8c9f-45a545283f34",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "when user input existing data, then user got response error",
                  "fullTitle": "API Service Group Create Service Product when user input existing data, then user got response error",
                  "timedOut": false,
                  "duration": 573,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await create.createServiceGroup('TEST66', 'Alda', 'this is triger from automation tools')\nassert(res.status).to.equal(400)",
                  "err": {},
                  "uuid": "0a15c4ca-1ebf-406c-8c35-8fad53277e32",
                  "parentUUID": "c907c91c-26a7-4536-8c9f-45a545283f34",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "when user input data using existing code data, then user got response error",
                  "fullTitle": "API Service Group Create Service Product when user input data using existing code data, then user got response error",
                  "timedOut": false,
                  "duration": 570,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await create.createServiceGroup('TEST66', datas.service_Group.name, datas.service_Group.description)\nassert(res.status).to.equal(400)",
                  "err": {},
                  "uuid": "21f0e2f5-523a-4802-baee-41b33095aee4",
                  "parentUUID": "c907c91c-26a7-4536-8c9f-45a545283f34",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "917e268e-fb4d-49c4-93ca-8938aa1fa6c8",
                "0a15c4ca-1ebf-406c-8c35-8fad53277e32",
                "21f0e2f5-523a-4802-baee-41b33095aee4"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1713,
              "root": false,
              "rootEmpty": false,
              "_timeout": 180000
            },
            {
              "uuid": "cd452850-3ca2-4c18-b6c6-246873abfa70",
              "title": "Get All Service Group",
              "fullFile": "/home/runner/work/flash/flash/test/suite_productService.js",
              "file": "/test/suite_productService.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "when user hit api get all then user got response 200 and all data will be appears",
                  "fullTitle": "API Service Group Get All Service Group when user hit api get all then user got response 200 and all data will be appears",
                  "timedOut": false,
                  "duration": 966,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await getAll.getallServiceGroup()\nif(res.status !==200){\n    console.log(\"getall data : \"+res.status+\"||\" +res.body.text)\n}\nassert(res.status).to.equal(200)\nassert(res.body.data[0]).to.have.property(\"id\")\nassert(res.body.data[0]).to.have.property(\"code\")\nassert(res.body.data[0]).to.have.property(\"name\")\nassert(res.body.data[0]).to.have.property(\"description\")\nassert(res.body.data[0]).to.have.property(\"is_active\")\nglobal.ids1 = res.body.data[1].id\nglobal.names1 = res.body.data[1].name\nglobal.desc1 = res.body.data[1].description\nglobal.codes1 = res.body.data[1].code",
                  "err": {},
                  "uuid": "8bd10fda-b4fd-4b2a-8a12-a3988091621b",
                  "parentUUID": "cd452850-3ca2-4c18-b6c6-246873abfa70",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8bd10fda-b4fd-4b2a-8a12-a3988091621b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 966,
              "root": false,
              "rootEmpty": false,
              "_timeout": 180000
            },
            {
              "uuid": "354d944b-e5af-4594-a1b3-6a6fc802435a",
              "title": "Get All Public Service Group ",
              "fullFile": "/home/runner/work/flash/flash/test/suite_productService.js",
              "file": "/test/suite_productService.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "when user hit api get all public then user got response 200 and all data will be appears",
                  "fullTitle": "API Service Group Get All Public Service Group  when user hit api get all public then user got response 200 and all data will be appears",
                  "timedOut": false,
                  "duration": 580,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await getAllpublic.getallpublicServiceGroup()\nif(res.status !==200){\n    console.log(\"getall data : \"+res.status+\"||\" +res.body.text)\n}\nassert(res.status).to.equal(200)\nassert(res.body.data[0]).to.have.property(\"id\")\nassert(res.body.data[0]).to.have.property(\"code\")\nassert(res.body.data[0]).to.have.property(\"name\")\nassert(res.body.data[0]).to.have.property(\"description\")\nassert(res.body.data[0]).to.have.property(\"is_active\")",
                  "err": {},
                  "uuid": "3858e1f9-1066-43f2-88e7-25b4bf78a8fe",
                  "parentUUID": "354d944b-e5af-4594-a1b3-6a6fc802435a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3858e1f9-1066-43f2-88e7-25b4bf78a8fe"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 580,
              "root": false,
              "rootEmpty": false,
              "_timeout": 180000
            },
            {
              "uuid": "1965dc3a-4fd5-4d98-a1cb-c4e1eb95c701",
              "title": "Get Detail Public Service Group",
              "fullFile": "/home/runner/work/flash/flash/test/suite_productService.js",
              "file": "/test/suite_productService.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "when user hit api get detail public then user got response 200 and all data will be appears",
                  "fullTitle": "API Service Group Get Detail Public Service Group when user hit api get detail public then user got response 200 and all data will be appears",
                  "timedOut": false,
                  "duration": 572,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await getdetailpublic.getdetailpublicServiceGroup(global.ids)\nif(res.status !==200){\n    console.log(\"getdetailpublic data : \"+res.status+\"||\" +res.body.text)\n}\nassert(res.status).to.equal(200)\nassert(res.body.data[0]).to.have.property(\"id\")\nassert(res.body.data[0]).to.have.property(\"code\")\nassert(res.body.data[0]).to.have.property(\"name\")\nassert(res.body.data[0]).to.have.property(\"description\")\nassert(res.body.data[0]).to.have.property(\"is_active\")",
                  "err": {},
                  "uuid": "63d06772-4c9b-45ff-82ca-82224f658db3",
                  "parentUUID": "1965dc3a-4fd5-4d98-a1cb-c4e1eb95c701",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "when user hit api get detail public with wrong id then user got response error",
                  "fullTitle": "API Service Group Get Detail Public Service Group when user hit api get detail public with wrong id then user got response error",
                  "timedOut": false,
                  "duration": 570,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await getdetailpublic.getdetailpublicServiceGroup(datas.service_Group.wrongid)\nassert(res.status).to.equal(404)\nassert(res.body.response_desc).to.have.property(\"id\").to.equal(\"error data tidak ditemukan\")\nassert(res.body.response_desc).to.have.property(\"en\")",
                  "err": {},
                  "uuid": "505af5af-d83d-4918-b8be-b13e30b1c7fc",
                  "parentUUID": "1965dc3a-4fd5-4d98-a1cb-c4e1eb95c701",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "63d06772-4c9b-45ff-82ca-82224f658db3",
                "505af5af-d83d-4918-b8be-b13e30b1c7fc"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1142,
              "root": false,
              "rootEmpty": false,
              "_timeout": 180000
            },
            {
              "uuid": "b1546085-14d9-4bff-bd3a-f8ce8b314c00",
              "title": "Get Detail Service Group",
              "fullFile": "/home/runner/work/flash/flash/test/suite_productService.js",
              "file": "/test/suite_productService.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "when user hit api get detail then user got response 200 and all data will be appears",
                  "fullTitle": "API Service Group Get Detail Service Group when user hit api get detail then user got response 200 and all data will be appears",
                  "timedOut": false,
                  "duration": 576,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await getdetail.getdetailServiceGroup(global.ids)\nif(res.status !==200){\n    console.log(\"getdetail data : \"+res.status+\"||\" +res.body.text)\n}\nassert(res.status).to.equal(200)\nassert(res.body.data[0]).to.have.property(\"id\")\nassert(res.body.data[0]).to.have.property(\"code\")\nassert(res.body.data[0]).to.have.property(\"name\")\nassert(res.body.data[0]).to.have.property(\"description\")\nassert(res.body.data[0]).to.have.property(\"is_active\")",
                  "err": {},
                  "uuid": "45ba47fe-f978-4859-a0fd-3be942844d49",
                  "parentUUID": "b1546085-14d9-4bff-bd3a-f8ce8b314c00",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "when user hit api get detail with wrong id then user got response error",
                  "fullTitle": "API Service Group Get Detail Service Group when user hit api get detail with wrong id then user got response error",
                  "timedOut": false,
                  "duration": 576,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await getdetail.getdetailServiceGroup(datas.service_Group.wrongid)\nassert(res.status).to.equal(404)\nassert(res.body.response_desc).to.have.property(\"id\").to.equal(\"error data tidak ditemukan\")\nassert(res.body.response_desc).to.have.property(\"en\")",
                  "err": {},
                  "uuid": "8d8277a6-7944-4b5b-99be-8b7349274076",
                  "parentUUID": "b1546085-14d9-4bff-bd3a-f8ce8b314c00",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "45ba47fe-f978-4859-a0fd-3be942844d49",
                "8d8277a6-7944-4b5b-99be-8b7349274076"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1152,
              "root": false,
              "rootEmpty": false,
              "_timeout": 180000
            },
            {
              "uuid": "cad1d082-d79e-4816-8ed7-706d0ca67bbf",
              "title": "Update Service Product",
              "fullFile": "/home/runner/work/flash/flash/test/suite_productService.js",
              "file": "/test/suite_productService.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "when user input corect data then user got response 200",
                  "fullTitle": "API Service Group Update Service Product when user input corect data then user got response 200",
                  "timedOut": false,
                  "duration": 573,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await update.updateServiceGroup(global.ids, datas.service_Group.code, datas.service_Group.name, datas.service_Group.description)   \nif(res.status !==200){\n    console.log(\"update data : \"+res.status+\"||\" +res.body.text)\n}\nassert(res.status).to.equal(200)\nassert(res.body.data[0]).to.have.property(\"id\")\nassert(res.body.data[0]).to.have.property(\"code\")\nassert(res.body.data[0]).to.have.property(\"name\")\nassert(res.body.data[0]).to.have.property(\"description\")\nassert(res.body.data[0]).to.have.property(\"is_active\")",
                  "err": {},
                  "uuid": "49dccfdd-fc73-424f-a8c5-070098f8ed64",
                  "parentUUID": "cad1d082-d79e-4816-8ed7-706d0ca67bbf",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "when user input different code and same description and same name then user got response 200",
                  "fullTitle": "API Service Group Update Service Product when user input different code and same description and same name then user got response 200",
                  "timedOut": false,
                  "duration": 571,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await update.updateServiceGroup(global.ids, datas.service_Group.code, global.names, global.desc)   \nif(res.status !==200){\n    console.log(\"update data : \"+res.status+\"||\" +res.body.text)\n}\nassert(res.status).to.equal(200)\nassert(res.body.data[0]).to.have.property(\"id\")\nassert(res.body.data[0]).to.have.property(\"code\")\nassert(res.body.data[0]).to.have.property(\"name\")\nassert(res.body.data[0]).to.have.property(\"description\")\nassert(res.body.data[0]).to.have.property(\"is_active\")",
                  "err": {},
                  "uuid": "5df8b249-765c-4cc9-9539-2258f41737ab",
                  "parentUUID": "cad1d082-d79e-4816-8ed7-706d0ca67bbf",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "when user input different name and same code then user got response 200",
                  "fullTitle": "API Service Group Update Service Product when user input different name and same code then user got response 200",
                  "timedOut": false,
                  "duration": 575,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await update.updateServiceGroup(global.ids, global.codes, datas.service_Group.name, global.desc)   \nif(res.status !==200){\n    console.log(\"update data : \"+res.status+\"||\" +res.body.text)\n}\nassert(res.status).to.equal(200)\nassert(res.body.data[0]).to.have.property(\"id\")\nassert(res.body.data[0]).to.have.property(\"code\")\nassert(res.body.data[0]).to.have.property(\"name\")\nassert(res.body.data[0]).to.have.property(\"description\")\nassert(res.body.data[0]).to.have.property(\"is_active\")",
                  "err": {},
                  "uuid": "e433242b-94f1-4fc7-b33b-85c3e346873f",
                  "parentUUID": "cad1d082-d79e-4816-8ed7-706d0ca67bbf",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "when user input different description and same code and same name then user got response 200",
                  "fullTitle": "API Service Group Update Service Product when user input different description and same code and same name then user got response 200",
                  "timedOut": false,
                  "duration": 572,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await update.updateServiceGroup(global.ids, global.codes, global.names, datas.service_Group.description)   \nif(res.status !==200){\n    console.log(\"update data : \"+res.status+\"||\" +res.body.text)\n}\nassert(res.status).to.equal(200)\nassert(res.body.data[0]).to.have.property(\"id\")\nassert(res.body.data[0]).to.have.property(\"code\")\nassert(res.body.data[0]).to.have.property(\"name\")\nassert(res.body.data[0]).to.have.property(\"description\")\nassert(res.body.data[0]).to.have.property(\"is_active\")",
                  "err": {},
                  "uuid": "395f3314-eba6-47cc-b3f7-fef815ddfcb0",
                  "parentUUID": "cad1d082-d79e-4816-8ed7-706d0ca67bbf",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "when user input same data, then user got response error",
                  "fullTitle": "API Service Group Update Service Product when user input same data, then user got response error",
                  "timedOut": false,
                  "duration": 578,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await update.updateServiceGroup(global.ids, global.codes1, global.names1, global.desc1)   \nassert(res.status).to.equal(500)",
                  "err": {},
                  "uuid": "48248c87-31cf-4669-a484-263782660295",
                  "parentUUID": "cad1d082-d79e-4816-8ed7-706d0ca67bbf",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "when user input data using existing code data, then user got response error",
                  "fullTitle": "API Service Group Update Service Product when user input data using existing code data, then user got response error",
                  "timedOut": false,
                  "duration": 579,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await update.updateServiceGroup(global.ids1, global.codes, datas.service_Group.name, datas.service_Group.description)   \nassert(res.status).to.equal(500)",
                  "err": {},
                  "uuid": "60d14b98-e01b-4713-8b9b-a9f067bb98d1",
                  "parentUUID": "cad1d082-d79e-4816-8ed7-706d0ca67bbf",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "49dccfdd-fc73-424f-a8c5-070098f8ed64",
                "5df8b249-765c-4cc9-9539-2258f41737ab",
                "e433242b-94f1-4fc7-b33b-85c3e346873f",
                "395f3314-eba6-47cc-b3f7-fef815ddfcb0",
                "48248c87-31cf-4669-a484-263782660295",
                "60d14b98-e01b-4713-8b9b-a9f067bb98d1"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3448,
              "root": false,
              "rootEmpty": false,
              "_timeout": 180000
            },
            {
              "uuid": "e171d01a-0e60-40e2-bf09-a9690c91ea2d",
              "title": "Delete data Service Group",
              "fullFile": "/home/runner/work/flash/flash/test/suite_productService.js",
              "file": "/test/suite_productService.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "when user hit api delete with correct id then user got response 200 and data will be deleted",
                  "fullTitle": "API Service Group Delete data Service Group when user hit api delete with correct id then user got response 200 and data will be deleted",
                  "timedOut": false,
                  "duration": 580,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await deleted.deleteServiceGroup(global.ids)\nassert(res.status).to.equal(200)",
                  "err": {},
                  "uuid": "19b0b3b8-1c59-4f92-bc10-ba960e7d0c80",
                  "parentUUID": "e171d01a-0e60-40e2-bf09-a9690c91ea2d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "when user hit api delete with wrong id then user got response error",
                  "fullTitle": "API Service Group Delete data Service Group when user hit api delete with wrong id then user got response error",
                  "timedOut": false,
                  "duration": 580,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await deleted.deleteServiceGroup(datas.service_Group.wrongid)\nassert(res.status).to.equal(404)",
                  "err": {},
                  "uuid": "edceab2c-c51b-40f5-8261-83412313abb6",
                  "parentUUID": "e171d01a-0e60-40e2-bf09-a9690c91ea2d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "19b0b3b8-1c59-4f92-bc10-ba960e7d0c80",
                "edceab2c-c51b-40f5-8261-83412313abb6"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1160,
              "root": false,
              "rootEmpty": false,
              "_timeout": 180000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 180000
        },
        {
          "uuid": "60358fda-0e3c-43aa-a874-1e309e8566bd",
          "title": "API Extension Clause",
          "fullFile": "/home/runner/work/flash/flash/test/suite_productService.js",
          "file": "/test/suite_productService.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "a9a38ff6-a789-4c01-8d58-611cfc5120d8",
              "title": "Create ExtensionClause",
              "fullFile": "/home/runner/work/flash/flash/test/suite_productService.js",
              "file": "/test/suite_productService.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "when user input corect data then user got response 200",
                  "fullTitle": "API Extension Clause Create ExtensionClause when user input corect data then user got response 200",
                  "timedOut": false,
                  "duration": 580,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await EC_create.createExtensionClause(datas.Extension_clause.code, datas.service_Group.name, datas.service_Group.description, global.codes)\nassert(res.status).to.equal(200)\nassert(res.body.data[0]).to.have.property(\"id\")\nassert(res.body.data[0]).to.have.property(\"service_group_id\").to.equal(global.ids)\nassert(res.body.data[0]).to.have.property(\"service_group_code\").to.equal(global.codes)\nassert(res.body.data[0]).to.have.property(\"code\")\nassert(res.body.data[0]).to.have.property(\"name\")\nassert(res.body.data[0]).to.have.property(\"description\")\nassert(res.body.data[0]).to.have.property(\"is_active\").to.equal(true)\nglobal.ECids = res.body.data[0].id",
                  "err": {},
                  "uuid": "c6acf10c-01e1-46cb-95f7-01508df76aa8",
                  "parentUUID": "a9a38ff6-a789-4c01-8d58-611cfc5120d8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c6acf10c-01e1-46cb-95f7-01508df76aa8"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 580,
              "root": false,
              "rootEmpty": false,
              "_timeout": 180000
            },
            {
              "uuid": "48700a9a-64bb-488f-b583-c8c910e6d051",
              "title": "Get all data Extension Clause",
              "fullFile": "/home/runner/work/flash/flash/test/suite_productService.js",
              "file": "/test/suite_productService.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "when user hit api get all then user got response 200 and all data will be appears",
                  "fullTitle": "API Extension Clause Get all data Extension Clause when user hit api get all then user got response 200 and all data will be appears",
                  "timedOut": false,
                  "duration": 1150,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await EC_Getall.getallExtensionClause()\nassert(res.status).to.equal(200)\nassert(res.body.data[0]).to.have.property(\"id\")\nassert(res.body.data[0]).to.have.property(\"service_group_id\")\nassert(res.body.data[0]).to.have.property(\"service_group_code\")\nassert(res.body.data[0]).to.have.property(\"code\")\nassert(res.body.data[0]).to.have.property(\"name\")\nassert(res.body.data[0]).to.have.property(\"description\")\nassert(res.body.data[0]).to.have.property(\"is_active\")\nglobal.ECids1 = res.body.data[1].id\nglobal.ECserviceCode1 = res.body.data[1].service_group_code\nglobal.code1 = res.body.data[1].code\nglobal.name1 = res.body.data[1].name\nglobal.code2 = res.body.data[0].code\nglobal.name2 = res.body.data[0].name\nglobal.ECserviceCode2 = res.body.data[0].service_group_code\nglobal.desc2 = res.body.data[0].description",
                  "err": {},
                  "uuid": "5b0fbb52-de59-4484-9f33-e0a46b460763",
                  "parentUUID": "48700a9a-64bb-488f-b583-c8c910e6d051",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5b0fbb52-de59-4484-9f33-e0a46b460763"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1150,
              "root": false,
              "rootEmpty": false,
              "_timeout": 180000
            },
            {
              "uuid": "6508fb1a-587d-47f0-aaf8-4ab603d04fce",
              "title": "Delete data Extension Clause",
              "fullFile": "/home/runner/work/flash/flash/test/suite_productService.js",
              "file": "/test/suite_productService.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "when user hit api delete with correct id then user got response 200 and data will be deleted",
                  "fullTitle": "API Extension Clause Delete data Extension Clause when user hit api delete with correct id then user got response 200 and data will be deleted",
                  "timedOut": false,
                  "duration": 580,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await EC_Delete.deleteExtensionClause(global.ECids)\nassert(res.status).to.equal(200)",
                  "err": {},
                  "uuid": "ac5da3c4-00bd-4ca1-89fe-e36f85734af4",
                  "parentUUID": "6508fb1a-587d-47f0-aaf8-4ab603d04fce",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "when user hit api delete with wrong id then user got response error",
                  "fullTitle": "API Extension Clause Delete data Extension Clause when user hit api delete with wrong id then user got response error",
                  "timedOut": false,
                  "duration": 580,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await EC_Delete.deleteExtensionClause(datas.Extension_clause.wrongid)\nassert(res.status).to.equal(400)\nassert(res.body.response_desc.id).to.equal('Product Extension Clause ID Tidak Ditemukan')",
                  "err": {},
                  "uuid": "9acd1090-6ec0-4bcc-a331-111d85f19890",
                  "parentUUID": "6508fb1a-587d-47f0-aaf8-4ab603d04fce",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ac5da3c4-00bd-4ca1-89fe-e36f85734af4",
                "9acd1090-6ec0-4bcc-a331-111d85f19890"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1160,
              "root": false,
              "rootEmpty": false,
              "_timeout": 180000
            },
            {
              "uuid": "48ea38b8-6d25-4856-9ee8-961659ff28b1",
              "title": "Get Detail Extension Clause",
              "fullFile": "/home/runner/work/flash/flash/test/suite_productService.js",
              "file": "/test/suite_productService.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "when user hit api get detail then user got response 200 and all data will be appears",
                  "fullTitle": "API Extension Clause Get Detail Extension Clause when user hit api get detail then user got response 200 and all data will be appears",
                  "timedOut": false,
                  "duration": 571,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await EC_Getdetail.getdetailExtensionClause(global.ECids)\nassert(res.status).to.equal(200)\nassert(res.body.data[0]).to.have.property(\"id\").to.equal(global.ECids)\nassert(res.body.data[0]).to.have.property(\"service_group_id\").to.equal(global.ids)\nassert(res.body.data[0]).to.have.property(\"service_group_code\").to.equal(global.codes)\nassert(res.body.data[0]).to.have.property(\"code\")\nassert(res.body.data[0]).to.have.property(\"name\")\nassert(res.body.data[0]).to.have.property(\"description\")\nassert(res.body.data[0]).to.have.property(\"is_active\").to.equal(false)",
                  "err": {},
                  "uuid": "1d83293c-f9c3-4aeb-afd1-6a3d9e1d77dd",
                  "parentUUID": "48ea38b8-6d25-4856-9ee8-961659ff28b1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "when user hit api get detail with wrong id then user got response error",
                  "fullTitle": "API Extension Clause Get Detail Extension Clause when user hit api get detail with wrong id then user got response error",
                  "timedOut": false,
                  "duration": 581,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await EC_Getdetail.getdetailExtensionClause(datas.Extension_clause.wrongid)\nassert(res.status).to.equal(404)\nassert(res.body.response_desc.id).to.equal('error data tidak ditemukan')",
                  "err": {},
                  "uuid": "751042e6-5bff-4de7-9f72-0a9053e78ae3",
                  "parentUUID": "48ea38b8-6d25-4856-9ee8-961659ff28b1",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1d83293c-f9c3-4aeb-afd1-6a3d9e1d77dd",
                "751042e6-5bff-4de7-9f72-0a9053e78ae3"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1152,
              "root": false,
              "rootEmpty": false,
              "_timeout": 180000
            },
            {
              "uuid": "24e8895e-1a5e-4a63-b4f4-861458396d65",
              "title": "update data Extension Clause",
              "fullFile": "/home/runner/work/flash/flash/test/suite_productService.js",
              "file": "/test/suite_productService.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "when user input corect data then user got response 200",
                  "fullTitle": "API Extension Clause update data Extension Clause when user input corect data then user got response 200",
                  "timedOut": false,
                  "duration": 579,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res =  await EC_Update.updateExtensionClause(global.ECids, global.code1, global.name1, datas.Extension_clause.description, global.ECserviceCode1)\nassert(res.status).to.equal(200)",
                  "err": {},
                  "uuid": "46562dd6-da8e-4965-b0f1-d6e04a801c85",
                  "parentUUID": "24e8895e-1a5e-4a63-b4f4-861458396d65",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "46562dd6-da8e-4965-b0f1-d6e04a801c85"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 579,
              "root": false,
              "rootEmpty": false,
              "_timeout": 180000
            },
            {
              "uuid": "f7f529ad-a438-4d6b-a978-bb9513d24ec8",
              "title": "Search data Extension Clause",
              "fullFile": "/home/runner/work/flash/flash/test/suite_productService.js",
              "file": "/test/suite_productService.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "when user input corect data then user got response 200",
                  "fullTitle": "API Extension Clause Search data Extension Clause when user input corect data then user got response 200",
                  "timedOut": false,
                  "duration": 762,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res =  await EC_Search.searchExtensionClause(global.ECserviceCode1, global.code1, global.name1)\nif(res.status !== 200){\n    console.log(\"error search EC\" +res.text);\n}\nassert(res.status).to.equal(200)\nassert(res.body.data[0]).to.have.property(\"id\")\nassert(res.body.data[0]).to.have.property(\"service_group_id\")\nassert(res.body.data[0]).to.have.property(\"service_group_code\")\nassert(res.body.data[0]).to.have.property(\"code\")\nassert(res.body.data[0]).to.have.property(\"name\")\nassert(res.body.data[0]).to.have.property(\"description\")\nassert(res.body.data[0]).to.have.property(\"is_active\")",
                  "err": {},
                  "uuid": "5c237343-00eb-460c-8a1a-c9adb1cde838",
                  "parentUUID": "f7f529ad-a438-4d6b-a978-bb9513d24ec8",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "when user input data using invalid service group, then user got response error",
                  "fullTitle": "API Extension Clause Search data Extension Clause when user input data using invalid service group, then user got response error",
                  "timedOut": false,
                  "duration": 574,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res =  await EC_Search.searchExtensionClause(datas.Extension_clause.invalid_service_group_code, global.code1, global.name1)\nassert(res.status).to.equal(400)\nassert(res.body.response_desc).to.have.property('id').to.equal('Product Search Extension Clause Data Tidak Ditemukan')",
                  "err": {},
                  "uuid": "4dccd0b4-4b15-46c4-9f08-b6194e9f29ef",
                  "parentUUID": "f7f529ad-a438-4d6b-a978-bb9513d24ec8",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "when user input data using different_code and with same service group and same name, then user got response error",
                  "fullTitle": "API Extension Clause Search data Extension Clause when user input data using different_code and with same service group and same name, then user got response error",
                  "timedOut": false,
                  "duration": 570,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res =  await EC_Search.searchExtensionClause(global.ECserviceCode1, global.code2, global.name1)\nassert(res.status).to.equal(400)\nassert(res.body.response_desc).to.have.property('id').to.equal('Product Search Extension Clause Data Tidak Ditemukan')",
                  "err": {},
                  "uuid": "66768eae-4a46-42eb-9caf-d5317d97bc57",
                  "parentUUID": "f7f529ad-a438-4d6b-a978-bb9513d24ec8",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "when user input data using different_name and with same service group and same code, then user got response error",
                  "fullTitle": "API Extension Clause Search data Extension Clause when user input data using different_name and with same service group and same code, then user got response error",
                  "timedOut": false,
                  "duration": 577,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res =  await EC_Search.searchExtensionClause(global.ECserviceCode1, global.code1, global.name2)\nassert(res.status).to.equal(400)\nassert(res.body.response_desc).to.have.property('id').to.equal('Product Search Extension Clause Data Tidak Ditemukan')",
                  "err": {},
                  "uuid": "76c70c87-133e-498b-bbfc-ada882782bf2",
                  "parentUUID": "f7f529ad-a438-4d6b-a978-bb9513d24ec8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5c237343-00eb-460c-8a1a-c9adb1cde838",
                "4dccd0b4-4b15-46c4-9f08-b6194e9f29ef",
                "66768eae-4a46-42eb-9caf-d5317d97bc57",
                "76c70c87-133e-498b-bbfc-ada882782bf2"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2483,
              "root": false,
              "rootEmpty": false,
              "_timeout": 180000
            },
            {
              "uuid": "324cbda1-bc98-4665-ada7-07e5ddebe9eb",
              "title": "Create Deductible API",
              "fullFile": "/home/runner/work/flash/flash/test/suite_productService.js",
              "file": "/test/suite_productService.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "when user input correct data then user got response 200",
                  "fullTitle": "API Extension Clause Create Deductible API when user input correct data then user got response 200",
                  "timedOut": false,
                  "duration": 578,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await DC_create.createDeductible(global.code2, global.name2, global.desc2, global.ECserviceCode2, datas.Deductible.calcu_method, datas.Deductible.calcu_value)\nif(res.status !== 200){\n    console.log(\"failed :\"+ res.text);\n}\nassert(res.status).to.equal(200)\nassert(res.body.data[0]).to.have.property(\"id\")\nassert(res.body.data[0]).to.have.property(\"service_group_id\")\nassert(res.body.data[0]).to.have.property(\"service_group_code\").to.equal(global.ECserviceCode2)\nassert(res.body.data[0]).to.have.property(\"code\").to.equal(global.code2)\nassert(res.body.data[0]).to.have.property(\"name\").to.equal(global.name2)\nassert(res.body.data[0]).to.have.property(\"calculation_method\").to.equal(\"percentage\")\nassert(res.body.data[0]).to.have.property(\"calculation_value\").to.equal(\"400000.00\")\nassert(res.body.data[0]).to.have.property(\"is_active\")\nglobal.ids = res.body.data[0].id",
                  "err": {},
                  "uuid": "b777f2eb-fad5-425c-bc25-d703ff21c793",
                  "parentUUID": "324cbda1-bc98-4665-ada7-07e5ddebe9eb",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "when user input wrong service group, then user got response error",
                  "fullTitle": "API Extension Clause Create Deductible API when user input wrong service group, then user got response error",
                  "timedOut": false,
                  "duration": 568,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await DC_create.createDeductible(global.code2, global.name2, global.desc2, datas.Deductible.service_code, datas.Deductible.calcu_method, datas.Deductible.calcu_value)\nassert(res.status).to.equal(400)\nassert(res.body.response_desc).to.have.property(\"id\").to.equal(\"Product Service Group Code Tidak Ditemukan\")",
                  "err": {},
                  "uuid": "ebdbd57e-f952-48d0-add4-7f0e0c5f92c9",
                  "parentUUID": "324cbda1-bc98-4665-ada7-07e5ddebe9eb",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "when user input wrong calculate method, then user got response error",
                  "fullTitle": "API Extension Clause Create Deductible API when user input wrong calculate method, then user got response error",
                  "timedOut": false,
                  "duration": 568,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await DC_create.createDeductible(global.code2, global.name2, global.desc2, global.ECserviceCode2, datas.Deductible.wrong_calcu_method, datas.Deductible.calcu_value)\nassert(res.status).to.equal(400)\nassert(res.body.response_desc).to.have.property(\"id\").to.equal(\"Calculation Method Salah\")",
                  "err": {},
                  "uuid": "7aeffe8e-68e1-4ac5-9418-670d2c28f348",
                  "parentUUID": "324cbda1-bc98-4665-ada7-07e5ddebe9eb",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "when user input deduction value with string, then user got response error",
                  "fullTitle": "API Extension Clause Create Deductible API when user input deduction value with string, then user got response error",
                  "timedOut": false,
                  "duration": 576,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await DC_create.createDeductible(global.code2, global.name2, global.desc2, global.ECserviceCode2, datas.Deductible.calcu_method, datas.Deductible.invalid_calcu_value)\nassert(res.body.response_desc).to.have.property(\"id\").to.equal(\"payload tidak valid\")",
                  "err": {},
                  "uuid": "125b33cb-a4ba-4e35-8f58-19dd873716f7",
                  "parentUUID": "324cbda1-bc98-4665-ada7-07e5ddebe9eb",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b777f2eb-fad5-425c-bc25-d703ff21c793",
                "ebdbd57e-f952-48d0-add4-7f0e0c5f92c9",
                "7aeffe8e-68e1-4ac5-9418-670d2c28f348",
                "125b33cb-a4ba-4e35-8f58-19dd873716f7"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2290,
              "root": false,
              "rootEmpty": false,
              "_timeout": 180000
            },
            {
              "uuid": "00ef3d91-e53a-43ad-9f52-20f1a2d0719c",
              "title": "Get all Deduction",
              "fullFile": "/home/runner/work/flash/flash/test/suite_productService.js",
              "file": "/test/suite_productService.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "when user hit api get all then user got response 200 and all data will be appears",
                  "fullTitle": "API Extension Clause Get all Deduction when user hit api get all then user got response 200 and all data will be appears",
                  "timedOut": false,
                  "duration": 959,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await DC_Getall.getDeductible()\nif(res.status !== 200){\n    console.log(\"failed :\"+ res.text);\n}\nassert(res.status).to.equal(200)\nassert(res.body.data[0]).to.have.property(\"id\")\nassert(res.body.data[0]).to.have.property(\"service_group_id\")\nassert(res.body.data[0]).to.have.property(\"service_group_code\")\nassert(res.body.data[0]).to.have.property(\"code\")\nassert(res.body.data[0]).to.have.property(\"name\")\nassert(res.body.data[0]).to.have.property(\"calculation_method\")\nassert(res.body.data[0]).to.have.property(\"calculation_value\")\nassert(res.body.data[0]).to.have.property(\"is_active\")",
                  "err": {},
                  "uuid": "cd5bef43-e576-4818-8645-7fd12830f7a1",
                  "parentUUID": "00ef3d91-e53a-43ad-9f52-20f1a2d0719c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "cd5bef43-e576-4818-8645-7fd12830f7a1"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 959,
              "root": false,
              "rootEmpty": false,
              "_timeout": 180000
            },
            {
              "uuid": "9231802c-ceca-4c6d-ac9d-37efdfcfbfc9",
              "title": "Get Detail Deduction",
              "fullFile": "/home/runner/work/flash/flash/test/suite_productService.js",
              "file": "/test/suite_productService.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "when user hit api get detail then user got response 200 and all data will be appears",
                  "fullTitle": "API Extension Clause Get Detail Deduction when user hit api get detail then user got response 200 and all data will be appears",
                  "timedOut": false,
                  "duration": 579,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await DC_Getdetail.getdetailDeductible(global.ids)\nif(res.status !== 200){\n    console.log(\"failed :\"+ res.text);\n}\nassert(res.status).to.equal(200)\nassert(res.body.data[0]).to.have.property(\"id\")\nassert(res.body.data[0]).to.have.property(\"service_group_id\")\nassert(res.body.data[0]).to.have.property(\"service_group_code\")\nassert(res.body.data[0]).to.have.property(\"code\")\nassert(res.body.data[0]).to.have.property(\"name\")\nassert(res.body.data[0]).to.have.property(\"calculation_method\")\nassert(res.body.data[0]).to.have.property(\"calculation_value\")\nassert(res.body.data[0]).to.have.property(\"is_active\")",
                  "err": {},
                  "uuid": "395946b5-9510-4130-b090-6d0cd1328222",
                  "parentUUID": "9231802c-ceca-4c6d-ac9d-37efdfcfbfc9",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "when user hit api get detail with wrong id then user got response error",
                  "fullTitle": "API Extension Clause Get Detail Deduction when user hit api get detail with wrong id then user got response error",
                  "timedOut": false,
                  "duration": 574,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await DC_Getdetail.getdetailDeductible(datas.Deductible.wrong_idDeduc)\nassert(res.status).to.equal(404)\nassert(res.body.response_desc).to.have.property(\"id\").to.equal(\"error data tidak ditemukan\")",
                  "err": {},
                  "uuid": "d51fc918-232d-4023-9ceb-059ce28bd16f",
                  "parentUUID": "9231802c-ceca-4c6d-ac9d-37efdfcfbfc9",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "395946b5-9510-4130-b090-6d0cd1328222",
                "d51fc918-232d-4023-9ceb-059ce28bd16f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1153,
              "root": false,
              "rootEmpty": false,
              "_timeout": 180000
            },
            {
              "uuid": "09db6818-cbf9-4cda-b34d-bb69bf2d82b8",
              "title": "Update Deduction Api",
              "fullFile": "/home/runner/work/flash/flash/test/suite_productService.js",
              "file": "/test/suite_productService.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "when user input corect data then user got response 200",
                  "fullTitle": "API Extension Clause Update Deduction Api when user input corect data then user got response 200",
                  "timedOut": false,
                  "duration": 583,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await DC_Update.updateDeductible(global.ids, datas.Deductible.code, datas.Deductible.name, global.desc2, global.ECserviceCode2, datas.Deductible.calcu_method1, datas.Deductible.calcu_value)\nif(res.status !== 200){\n    console.log(\"failed :\"+res.text);\n}\nassert(res.status).to.equal(200)\nassert(res.body.data[0]).to.have.property(\"id\")\nassert(res.body.data[0]).to.have.property(\"service_group_id\")\nassert(res.body.data[0]).to.have.property(\"service_group_code\")\nassert(res.body.data[0]).to.have.property(\"code\")\nassert(res.body.data[0]).to.have.property(\"name\")\nassert(res.body.data[0]).to.have.property(\"calculation_method\")\nassert(res.body.data[0]).to.have.property(\"calculation_value\")\nassert(res.body.data[0]).to.have.property(\"is_active\")",
                  "err": {},
                  "uuid": "8a3fe067-aa03-4922-b9e0-72cce83e89b5",
                  "parentUUID": "09db6818-cbf9-4cda-b34d-bb69bf2d82b8",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "when user input data using invalid Deduction id, then user got response error",
                  "fullTitle": "API Extension Clause Update Deduction Api when user input data using invalid Deduction id, then user got response error",
                  "timedOut": false,
                  "duration": 573,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await DC_Update.updateDeductible(datas.Deductible.wrong_idDeduc, datas.Deductible.code, datas.Deductible.name, global.desc2, global.ECserviceCode2, datas.Deductible.calcu_method, datas.Deductible.calcu_value)\nassert(res.status).to.equal(400)\nassert(res.body.response_desc).to.have.property(\"id\").to.equal(\"Product Deductible ID Tidak Ditemukan\")",
                  "err": {},
                  "uuid": "df321cfc-a8fc-42b5-9634-40cfeea95fbc",
                  "parentUUID": "09db6818-cbf9-4cda-b34d-bb69bf2d82b8",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "when user input calcu Method then user got response 200",
                  "fullTitle": "API Extension Clause Update Deduction Api when user input calcu Method then user got response 200",
                  "timedOut": false,
                  "duration": 575,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await DC_Update.updateDeductible(global.ids, datas.Deductible.code, datas.Deductible.name, global.desc2, global.ECserviceCode2, datas.Deductible.wrong_calcu_method, datas.Deductible.calcu_value)\nassert(res.status).to.equal(400)\nassert(res.body.response_desc).to.have.property(\"id\").to.equal(\"Calculation Method Salah\")",
                  "err": {},
                  "uuid": "f305471b-08bb-4fd2-891e-fb983f97b3b5",
                  "parentUUID": "09db6818-cbf9-4cda-b34d-bb69bf2d82b8",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "when user input calcu value with string, then user got response 200",
                  "fullTitle": "API Extension Clause Update Deduction Api when user input calcu value with string, then user got response 200",
                  "timedOut": false,
                  "duration": 578,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await DC_Update.updateDeductible(global.ids, datas.Deductible.code, datas.Deductible.name, global.desc2, global.ECserviceCode2, datas.Deductible.calcu_method, datas.Deductible.invalid_calcu_value)\nassert(res.status).to.equal(400)\nassert(res.body.response_desc).to.have.property(\"id\").to.equal(\"payload tidak valid\")",
                  "err": {},
                  "uuid": "7354c36c-19ee-4df5-a118-7167ada44758",
                  "parentUUID": "09db6818-cbf9-4cda-b34d-bb69bf2d82b8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8a3fe067-aa03-4922-b9e0-72cce83e89b5",
                "df321cfc-a8fc-42b5-9634-40cfeea95fbc",
                "f305471b-08bb-4fd2-891e-fb983f97b3b5",
                "7354c36c-19ee-4df5-a118-7167ada44758"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2309,
              "root": false,
              "rootEmpty": false,
              "_timeout": 180000
            },
            {
              "uuid": "a3e9ac4a-5e5a-42ba-9db3-40e962bcd331",
              "title": "Search Deduction Api",
              "fullFile": "/home/runner/work/flash/flash/test/suite_productService.js",
              "file": "/test/suite_productService.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "when user input corect data then user got response 200",
                  "fullTitle": "API Extension Clause Search Deduction Api when user input corect data then user got response 200",
                  "timedOut": false,
                  "duration": 588,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await DC_Search.searchDeductible(global.code2, global.name2, global.desc2, global.ECserviceCode2, datas.Deductible.calcu_method, datas.Deductible.calcu_value)\nif(res.status !== 200){\n    console.log(\"failed :\"+ res.text);\n}\nassert(res.status).to.equal(200)\nassert(res.body.data[0]).to.have.property(\"id\")\nassert(res.body.data[0]).to.have.property(\"service_group_id\")\nassert(res.body.data[0]).to.have.property(\"service_group_code\").to.equal(global.ECserviceCode2)\nassert(res.body.data[0]).to.have.property(\"code\").to.equal(global.code2)\nassert(res.body.data[0]).to.have.property(\"name\").to.equal(global.name2)\nassert(res.body.data[0]).to.have.property(\"calculation_method\").to.equal(\"percentage\")\nassert(res.body.data[0]).to.have.property(\"calculation_value\").to.equal(\"400000.00\")\nassert(res.body.data[0]).to.have.property(\"is_active\")",
                  "err": {},
                  "uuid": "58c78fc2-f344-4630-82b3-7d82c1a835d4",
                  "parentUUID": "a3e9ac4a-5e5a-42ba-9db3-40e962bcd331",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "58c78fc2-f344-4630-82b3-7d82c1a835d4"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 588,
              "root": false,
              "rootEmpty": false,
              "_timeout": 180000
            },
            {
              "uuid": "c4061ca9-e2f8-4bf7-b8a1-65d3a9854800",
              "title": "Deleted Deduction APi",
              "fullFile": "/home/runner/work/flash/flash/test/suite_productService.js",
              "file": "/test/suite_productService.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "when user hit api delete with correct id then user got response 200 and data will be deleted",
                  "fullTitle": "API Extension Clause Deleted Deduction APi when user hit api delete with correct id then user got response 200 and data will be deleted",
                  "timedOut": false,
                  "duration": 575,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await DC_Delete.deleteDeductible(global.ids)\nif(res.status !== 200){\n    console.log(\"failed :\"+ res.text);\n}\nassert(res.status).to.equal(200)",
                  "err": {},
                  "uuid": "7dd4f0d7-dddc-45b3-a03a-806245d0ffc0",
                  "parentUUID": "c4061ca9-e2f8-4bf7-b8a1-65d3a9854800",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "when user hit api delete with wrong id then user got response error",
                  "fullTitle": "API Extension Clause Deleted Deduction APi when user hit api delete with wrong id then user got response error",
                  "timedOut": false,
                  "duration": 574,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await DC_Delete.deleteDeductible(datas.Deductible.wrong_idDeduc)\nassert(res.status).to.equal(400)",
                  "err": {},
                  "uuid": "68c57260-4ecd-4fa8-9d89-85e53cc47465",
                  "parentUUID": "c4061ca9-e2f8-4bf7-b8a1-65d3a9854800",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7dd4f0d7-dddc-45b3-a03a-806245d0ffc0",
                "68c57260-4ecd-4fa8-9d89-85e53cc47465"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1149,
              "root": false,
              "rootEmpty": false,
              "_timeout": 180000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 180000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 180000
    }
  ],
  "meta": {
    "mocha": {
      "version": "9.2.2"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "reports/mochawesome/"
      },
      "version": "6.2.0"
    }
  }
}