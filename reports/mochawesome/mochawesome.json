{
  "stats": {
    "suites": 13,
    "tests": 23,
    "passes": 23,
    "pending": 0,
    "failures": 0,
    "start": "2022-05-17T19:59:03.643Z",
    "end": "2022-05-17T19:59:05.291Z",
    "duration": 1648,
    "testsRegistered": 23,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "652f6b49-118d-496f-8f3d-7b32eab51acd",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "9a0300da-d345-48bd-a3ac-f94c393b7689",
          "title": "API Service Group",
          "fullFile": "/Users/ariotriguna/Repo/flash/test/suite_productService.js",
          "file": "/test/suite_productService.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "44daa50c-3abc-4eb8-bc09-31fc2d8e0bf9",
              "title": "Create Service Product",
              "fullFile": "/Users/ariotriguna/Repo/flash/test/suite_productService.js",
              "file": "/test/suite_productService.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "when user input corect data then user got response 200",
                  "fullTitle": "API Service Group Create Service Product when user input corect data then user got response 200",
                  "timedOut": false,
                  "duration": 103,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await create.createServiceGroup(datas.service_Group.code, datas.service_Group.name, datas.service_Group.description)   \nif(res.status !==200){\n    console.log(\"create data : \"+res.status+\"||\" +res.body.text)\n}         \nassert(res.status).to.equal(200)\nglobal.ids = res.body.data[0].id\nglobal.names = res.body.data[0].name\nglobal.desc = res.body.data[0].description\nglobal.codes = res.body.data[0].code\nassert(res.body.data[0]).to.have.property(\"id\")\nassert(res.body.data[0]).to.have.property(\"code\")\nassert(res.body.data[0]).to.have.property(\"name\")\nassert(res.body.data[0]).to.have.property(\"description\")\nassert(res.body.data[0]).to.have.property(\"is_active\")",
                  "err": {},
                  "uuid": "2796c372-ee79-4a9b-bd8d-ad35ba0b8b6c",
                  "parentUUID": "44daa50c-3abc-4eb8-bc09-31fc2d8e0bf9",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "when user input existing data, then user got response error",
                  "fullTitle": "API Service Group Create Service Product when user input existing data, then user got response error",
                  "timedOut": false,
                  "duration": 71,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await create.createServiceGroup('TEST66', 'Alda', 'this is triger from automation tools')\nassert(res.status).to.equal(400)",
                  "err": {},
                  "uuid": "f00fab7b-e03b-4230-b362-8897417470b9",
                  "parentUUID": "44daa50c-3abc-4eb8-bc09-31fc2d8e0bf9",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "when user input data using existing code data, then user got response error",
                  "fullTitle": "API Service Group Create Service Product when user input data using existing code data, then user got response error",
                  "timedOut": false,
                  "duration": 63,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await create.createServiceGroup('TEST66', datas.service_Group.name, datas.service_Group.description)\nassert(res.status).to.equal(400)",
                  "err": {},
                  "uuid": "743b8242-92d9-4579-83d5-6bba65002466",
                  "parentUUID": "44daa50c-3abc-4eb8-bc09-31fc2d8e0bf9",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2796c372-ee79-4a9b-bd8d-ad35ba0b8b6c",
                "f00fab7b-e03b-4230-b362-8897417470b9",
                "743b8242-92d9-4579-83d5-6bba65002466"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 237,
              "root": false,
              "rootEmpty": false,
              "_timeout": 180000
            },
            {
              "uuid": "9d7cc984-4b0e-4177-878b-69b2d632f2e9",
              "title": "Get All Service Group",
              "fullFile": "/Users/ariotriguna/Repo/flash/test/suite_productService.js",
              "file": "/test/suite_productService.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "when user hit api get all then user got response 200 and all data will be appears",
                  "fullTitle": "API Service Group Get All Service Group when user hit api get all then user got response 200 and all data will be appears",
                  "timedOut": false,
                  "duration": 83,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await getAll.getallServiceGroup()\nif(res.status !==200){\n    console.log(\"getall data : \"+res.status+\"||\" +res.body.text)\n}\nassert(res.status).to.equal(200)\nassert(res.body.data[0]).to.have.property(\"id\")\nassert(res.body.data[0]).to.have.property(\"code\")\nassert(res.body.data[0]).to.have.property(\"name\")\nassert(res.body.data[0]).to.have.property(\"description\")\nassert(res.body.data[0]).to.have.property(\"is_active\")\nglobal.ids1 = res.body.data[1].id\nglobal.names1 = res.body.data[1].name\nglobal.desc1 = res.body.data[1].description\nglobal.codes1 = res.body.data[1].code",
                  "err": {},
                  "uuid": "6c9cbf13-80f9-4dd5-90fe-3b5efdec3336",
                  "parentUUID": "9d7cc984-4b0e-4177-878b-69b2d632f2e9",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6c9cbf13-80f9-4dd5-90fe-3b5efdec3336"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 83,
              "root": false,
              "rootEmpty": false,
              "_timeout": 180000
            },
            {
              "uuid": "bc48ed20-31b8-4e58-b2ec-3d9afd41331e",
              "title": "Get All Public Service Group ",
              "fullFile": "/Users/ariotriguna/Repo/flash/test/suite_productService.js",
              "file": "/test/suite_productService.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "when user hit api get all public then user got response 200 and all data will be appears",
                  "fullTitle": "API Service Group Get All Public Service Group  when user hit api get all public then user got response 200 and all data will be appears",
                  "timedOut": false,
                  "duration": 72,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await getAllpublic.getallpublicServiceGroup()\nif(res.status !==200){\n    console.log(\"getall data : \"+res.status+\"||\" +res.body.text)\n}\nassert(res.status).to.equal(200)\nassert(res.body.data[0]).to.have.property(\"id\")\nassert(res.body.data[0]).to.have.property(\"code\")\nassert(res.body.data[0]).to.have.property(\"name\")\nassert(res.body.data[0]).to.have.property(\"description\")\nassert(res.body.data[0]).to.have.property(\"is_active\")",
                  "err": {},
                  "uuid": "f168aa4d-3992-4a8a-9b1b-1a7594557133",
                  "parentUUID": "bc48ed20-31b8-4e58-b2ec-3d9afd41331e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f168aa4d-3992-4a8a-9b1b-1a7594557133"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 72,
              "root": false,
              "rootEmpty": false,
              "_timeout": 180000
            },
            {
              "uuid": "0f9a1559-913b-432c-b515-5ce39d0f69f6",
              "title": "Get Detail Public Service Group",
              "fullFile": "/Users/ariotriguna/Repo/flash/test/suite_productService.js",
              "file": "/test/suite_productService.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "when user hit api get detail public then user got response 200 and all data will be appears",
                  "fullTitle": "API Service Group Get Detail Public Service Group when user hit api get detail public then user got response 200 and all data will be appears",
                  "timedOut": false,
                  "duration": 74,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await getdetailpublic.getdetailpublicServiceGroup(global.ids)\nif(res.status !==200){\n    console.log(\"getdetailpublic data : \"+res.status+\"||\" +res.body.text)\n}\nassert(res.status).to.equal(200)\nassert(res.body.data[0]).to.have.property(\"id\")\nassert(res.body.data[0]).to.have.property(\"code\")\nassert(res.body.data[0]).to.have.property(\"name\")\nassert(res.body.data[0]).to.have.property(\"description\")\nassert(res.body.data[0]).to.have.property(\"is_active\")",
                  "err": {},
                  "uuid": "ea6d4eef-6b92-4802-82c2-cb67c2e566ab",
                  "parentUUID": "0f9a1559-913b-432c-b515-5ce39d0f69f6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "when user hit api get detail public with wrong id then user got response error",
                  "fullTitle": "API Service Group Get Detail Public Service Group when user hit api get detail public with wrong id then user got response error",
                  "timedOut": false,
                  "duration": 74,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await getdetailpublic.getdetailpublicServiceGroup(datas.service_Group.wrongid)\nassert(res.status).to.equal(404)\nassert(res.body.response_desc).to.have.property(\"id\").to.equal(\"error data tidak ditemukan\")\nassert(res.body.response_desc).to.have.property(\"en\")",
                  "err": {},
                  "uuid": "b519065f-b619-4c9b-8627-e721deac6b41",
                  "parentUUID": "0f9a1559-913b-432c-b515-5ce39d0f69f6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ea6d4eef-6b92-4802-82c2-cb67c2e566ab",
                "b519065f-b619-4c9b-8627-e721deac6b41"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 148,
              "root": false,
              "rootEmpty": false,
              "_timeout": 180000
            },
            {
              "uuid": "4e2aac8b-f961-4b05-9236-e318d4ec80c3",
              "title": "Get Detail Service Group",
              "fullFile": "/Users/ariotriguna/Repo/flash/test/suite_productService.js",
              "file": "/test/suite_productService.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "when user hit api get detail then user got response 200 and all data will be appears",
                  "fullTitle": "API Service Group Get Detail Service Group when user hit api get detail then user got response 200 and all data will be appears",
                  "timedOut": false,
                  "duration": 62,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await getdetail.getdetailServiceGroup(global.ids)\nif(res.status !==200){\n    console.log(\"getdetail data : \"+res.status+\"||\" +res.body.text)\n}\nassert(res.status).to.equal(200)\nassert(res.body.data[0]).to.have.property(\"id\")\nassert(res.body.data[0]).to.have.property(\"code\")\nassert(res.body.data[0]).to.have.property(\"name\")\nassert(res.body.data[0]).to.have.property(\"description\")\nassert(res.body.data[0]).to.have.property(\"is_active\")",
                  "err": {},
                  "uuid": "79716305-763e-4fdf-a8d9-54a269f7b79b",
                  "parentUUID": "4e2aac8b-f961-4b05-9236-e318d4ec80c3",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "when user hit api get detail with wrong id then user got response error",
                  "fullTitle": "API Service Group Get Detail Service Group when user hit api get detail with wrong id then user got response error",
                  "timedOut": false,
                  "duration": 62,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await getdetail.getdetailServiceGroup(datas.service_Group.wrongid)\nassert(res.status).to.equal(404)\nassert(res.body.response_desc).to.have.property(\"id\").to.equal(\"error data tidak ditemukan\")\nassert(res.body.response_desc).to.have.property(\"en\")",
                  "err": {},
                  "uuid": "0bb9d83c-eaef-4aad-9a59-d16493268a07",
                  "parentUUID": "4e2aac8b-f961-4b05-9236-e318d4ec80c3",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "79716305-763e-4fdf-a8d9-54a269f7b79b",
                "0bb9d83c-eaef-4aad-9a59-d16493268a07"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 124,
              "root": false,
              "rootEmpty": false,
              "_timeout": 180000
            },
            {
              "uuid": "c927678f-dac9-4c9d-8afa-22f37738f8a2",
              "title": "Update Service Product",
              "fullFile": "/Users/ariotriguna/Repo/flash/test/suite_productService.js",
              "file": "/test/suite_productService.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "when user input corect data then user got response 200",
                  "fullTitle": "API Service Group Update Service Product when user input corect data then user got response 200",
                  "timedOut": false,
                  "duration": 77,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await update.updateServiceGroup(global.ids, datas.service_Group.code, datas.service_Group.name, datas.service_Group.description)   \nif(res.status !==200){\n    console.log(\"update data : \"+res.status+\"||\" +res.body.text)\n}\nassert(res.status).to.equal(200)\nassert(res.body.data[0]).to.have.property(\"id\")\nassert(res.body.data[0]).to.have.property(\"code\")\nassert(res.body.data[0]).to.have.property(\"name\")\nassert(res.body.data[0]).to.have.property(\"description\")\nassert(res.body.data[0]).to.have.property(\"is_active\")",
                  "err": {},
                  "uuid": "1cfa0480-5a45-4f2d-8620-679cc3a6d37e",
                  "parentUUID": "c927678f-dac9-4c9d-8afa-22f37738f8a2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "when user input different code and same description and same name then user got response 200",
                  "fullTitle": "API Service Group Update Service Product when user input different code and same description and same name then user got response 200",
                  "timedOut": false,
                  "duration": 63,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await update.updateServiceGroup(global.ids, datas.service_Group.code, global.names, global.desc)   \nif(res.status !==200){\n    console.log(\"update data : \"+res.status+\"||\" +res.body.text)\n}\nassert(res.status).to.equal(200)\nassert(res.body.data[0]).to.have.property(\"id\")\nassert(res.body.data[0]).to.have.property(\"code\")\nassert(res.body.data[0]).to.have.property(\"name\")\nassert(res.body.data[0]).to.have.property(\"description\")\nassert(res.body.data[0]).to.have.property(\"is_active\")",
                  "err": {},
                  "uuid": "f4641518-70ee-42c3-be12-cd723d2a64f2",
                  "parentUUID": "c927678f-dac9-4c9d-8afa-22f37738f8a2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "when user input different name and same code then user got response 200",
                  "fullTitle": "API Service Group Update Service Product when user input different name and same code then user got response 200",
                  "timedOut": false,
                  "duration": 74,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await update.updateServiceGroup(global.ids, global.codes, datas.service_Group.name, global.desc)   \nif(res.status !==200){\n    console.log(\"update data : \"+res.status+\"||\" +res.body.text)\n}\nassert(res.status).to.equal(200)\nassert(res.body.data[0]).to.have.property(\"id\")\nassert(res.body.data[0]).to.have.property(\"code\")\nassert(res.body.data[0]).to.have.property(\"name\")\nassert(res.body.data[0]).to.have.property(\"description\")\nassert(res.body.data[0]).to.have.property(\"is_active\")",
                  "err": {},
                  "uuid": "a74762e5-a784-446b-94bc-0472e210ac09",
                  "parentUUID": "c927678f-dac9-4c9d-8afa-22f37738f8a2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "when user input different description and same code and same name then user got response 200",
                  "fullTitle": "API Service Group Update Service Product when user input different description and same code and same name then user got response 200",
                  "timedOut": false,
                  "duration": 64,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await update.updateServiceGroup(global.ids, global.codes, global.names, datas.service_Group.description)   \nif(res.status !==200){\n    console.log(\"update data : \"+res.status+\"||\" +res.body.text)\n}\nassert(res.status).to.equal(200)\nassert(res.body.data[0]).to.have.property(\"id\")\nassert(res.body.data[0]).to.have.property(\"code\")\nassert(res.body.data[0]).to.have.property(\"name\")\nassert(res.body.data[0]).to.have.property(\"description\")\nassert(res.body.data[0]).to.have.property(\"is_active\")",
                  "err": {},
                  "uuid": "329471d5-150c-4beb-8417-808655f69da0",
                  "parentUUID": "c927678f-dac9-4c9d-8afa-22f37738f8a2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "when user input same data, then user got response error",
                  "fullTitle": "API Service Group Update Service Product when user input same data, then user got response error",
                  "timedOut": false,
                  "duration": 69,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await update.updateServiceGroup(global.ids, global.codes1, global.names1, global.desc1)   \nassert(res.status).to.equal(500)",
                  "err": {},
                  "uuid": "4a474053-a73a-488e-8dba-a1aaab80af56",
                  "parentUUID": "c927678f-dac9-4c9d-8afa-22f37738f8a2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "when user input data using existing code data, then user got response error",
                  "fullTitle": "API Service Group Update Service Product when user input data using existing code data, then user got response error",
                  "timedOut": false,
                  "duration": 60,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await update.updateServiceGroup(global.ids1, global.codes, datas.service_Group.name, datas.service_Group.description)   \nassert(res.status).to.equal(500)",
                  "err": {},
                  "uuid": "b8bdf94e-d0ac-4914-bf96-786a26904fac",
                  "parentUUID": "c927678f-dac9-4c9d-8afa-22f37738f8a2",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1cfa0480-5a45-4f2d-8620-679cc3a6d37e",
                "f4641518-70ee-42c3-be12-cd723d2a64f2",
                "a74762e5-a784-446b-94bc-0472e210ac09",
                "329471d5-150c-4beb-8417-808655f69da0",
                "4a474053-a73a-488e-8dba-a1aaab80af56",
                "b8bdf94e-d0ac-4914-bf96-786a26904fac"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 407,
              "root": false,
              "rootEmpty": false,
              "_timeout": 180000
            },
            {
              "uuid": "417a164c-304e-48de-9b20-2b5563d75200",
              "title": "Delete data Service Group",
              "fullFile": "/Users/ariotriguna/Repo/flash/test/suite_productService.js",
              "file": "/test/suite_productService.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "when user hit api delete with correct id then user got response 200 and data will be deleted",
                  "fullTitle": "API Service Group Delete data Service Group when user hit api delete with correct id then user got response 200 and data will be deleted",
                  "timedOut": false,
                  "duration": 67,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await deleted.deleteServiceGroup(global.ids)\nassert(res.status).to.equal(200)",
                  "err": {},
                  "uuid": "3e54e0ed-61b0-4030-9b19-7a24ac3861e4",
                  "parentUUID": "417a164c-304e-48de-9b20-2b5563d75200",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "when user hit api delete with wrong id then user got response error",
                  "fullTitle": "API Service Group Delete data Service Group when user hit api delete with wrong id then user got response error",
                  "timedOut": false,
                  "duration": 67,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await deleted.deleteServiceGroup(datas.service_Group.wrongid)\nassert(res.status).to.equal(404)",
                  "err": {},
                  "uuid": "7da02bc2-e5bf-4b85-b39f-df2efeabb251",
                  "parentUUID": "417a164c-304e-48de-9b20-2b5563d75200",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3e54e0ed-61b0-4030-9b19-7a24ac3861e4",
                "7da02bc2-e5bf-4b85-b39f-df2efeabb251"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 134,
              "root": false,
              "rootEmpty": false,
              "_timeout": 180000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 180000
        },
        {
          "uuid": "c979a8be-f9bb-488f-94df-f39068ba9212",
          "title": "API Extension Clause",
          "fullFile": "/Users/ariotriguna/Repo/flash/test/suite_productService.js",
          "file": "/test/suite_productService.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "6eab3bf4-6d5e-4fbf-9a5d-3d9294ff4e1a",
              "title": "Create ExtensionClause",
              "fullFile": "/Users/ariotriguna/Repo/flash/test/suite_productService.js",
              "file": "/test/suite_productService.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "when user input corect data then user got response 200",
                  "fullTitle": "API Extension Clause Create ExtensionClause when user input corect data then user got response 200",
                  "timedOut": false,
                  "duration": 70,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await EC_create.createExtensionClause(datas.Extension_clause.code, datas.service_Group.name, datas.service_Group.description, global.codes)\nassert(res.status).to.equal(200)\nassert(res.body.data[0]).to.have.property(\"id\")\nassert(res.body.data[0]).to.have.property(\"service_group_id\").to.equal(global.ids)\nassert(res.body.data[0]).to.have.property(\"service_group_code\").to.equal(global.codes)\nassert(res.body.data[0]).to.have.property(\"code\")\nassert(res.body.data[0]).to.have.property(\"name\")\nassert(res.body.data[0]).to.have.property(\"description\")\nassert(res.body.data[0]).to.have.property(\"is_active\").to.equal(true)\nglobal.ECids = res.body.data[0].id",
                  "err": {},
                  "uuid": "4b3bc47b-830f-4bfd-b081-d4c24626d43a",
                  "parentUUID": "6eab3bf4-6d5e-4fbf-9a5d-3d9294ff4e1a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4b3bc47b-830f-4bfd-b081-d4c24626d43a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 70,
              "root": false,
              "rootEmpty": false,
              "_timeout": 180000
            },
            {
              "uuid": "58a4046e-1689-4e69-a313-94bb1cec8327",
              "title": "Get all data Extension Clause",
              "fullFile": "/Users/ariotriguna/Repo/flash/test/suite_productService.js",
              "file": "/test/suite_productService.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "when user hit api get all then user got response 200 and all data will be appears",
                  "fullTitle": "API Extension Clause Get all data Extension Clause when user hit api get all then user got response 200 and all data will be appears",
                  "timedOut": false,
                  "duration": 87,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await EC_Getall.getallExtensionClause()\nassert(res.status).to.equal(200)\nassert(res.body.data[12]).to.have.property(\"id\")\nassert(res.body.data[12]).to.have.property(\"service_group_id\")\nassert(res.body.data[12]).to.have.property(\"service_group_code\")\nassert(res.body.data[12]).to.have.property(\"code\")\nassert(res.body.data[12]).to.have.property(\"name\")\nassert(res.body.data[12]).to.have.property(\"description\")\nassert(res.body.data[12]).to.have.property(\"is_active\").to.equal(true)",
                  "err": {},
                  "uuid": "6de6ebfe-0214-468b-8f51-ec9a26e381bd",
                  "parentUUID": "58a4046e-1689-4e69-a313-94bb1cec8327",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6de6ebfe-0214-468b-8f51-ec9a26e381bd"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 87,
              "root": false,
              "rootEmpty": false,
              "_timeout": 180000
            },
            {
              "uuid": "435df469-8494-44a7-b003-2e25d6567dc1",
              "title": "Delete data Extension Clause",
              "fullFile": "/Users/ariotriguna/Repo/flash/test/suite_productService.js",
              "file": "/test/suite_productService.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "when user hit api delete with correct id then user got response 200 and data will be deleted",
                  "fullTitle": "API Extension Clause Delete data Extension Clause when user hit api delete with correct id then user got response 200 and data will be deleted",
                  "timedOut": false,
                  "duration": 66,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await EC_Delete.deleteExtensionClause(global.ECids)\nassert(res.status).to.equal(200)",
                  "err": {},
                  "uuid": "56c11849-f952-41eb-9c7e-c1715a2093a3",
                  "parentUUID": "435df469-8494-44a7-b003-2e25d6567dc1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "when user hit api delete with wrong id then user got response error",
                  "fullTitle": "API Extension Clause Delete data Extension Clause when user hit api delete with wrong id then user got response error",
                  "timedOut": false,
                  "duration": 69,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await EC_Delete.deleteExtensionClause(datas.Extension_clause.wrongid)\nassert(res.status).to.equal(400)\nassert(res.body.response_desc.id).to.equal('Product Extension Clause ID Tidak Ditemukan')",
                  "err": {},
                  "uuid": "42444f1b-e237-49cb-82e3-a8c2ea28f93f",
                  "parentUUID": "435df469-8494-44a7-b003-2e25d6567dc1",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "56c11849-f952-41eb-9c7e-c1715a2093a3",
                "42444f1b-e237-49cb-82e3-a8c2ea28f93f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 135,
              "root": false,
              "rootEmpty": false,
              "_timeout": 180000
            },
            {
              "uuid": "9d88b247-8e0a-4c02-8539-474d250fab40",
              "title": "Get Detail Extension Clause",
              "fullFile": "/Users/ariotriguna/Repo/flash/test/suite_productService.js",
              "file": "/test/suite_productService.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "when user hit api get detail then user got response 200 and all data will be appears",
                  "fullTitle": "API Extension Clause Get Detail Extension Clause when user hit api get detail then user got response 200 and all data will be appears",
                  "timedOut": false,
                  "duration": 63,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await EC_Getdetail.getdetailExtensionClause(global.ECids)\nassert(res.status).to.equal(200)\nassert(res.body.data[0]).to.have.property(\"id\").to.equal(global.ECids)\nassert(res.body.data[0]).to.have.property(\"service_group_id\").to.equal(global.ids)\nassert(res.body.data[0]).to.have.property(\"service_group_code\").to.equal(global.codes)\nassert(res.body.data[0]).to.have.property(\"code\")\nassert(res.body.data[0]).to.have.property(\"name\")\nassert(res.body.data[0]).to.have.property(\"description\")\nassert(res.body.data[0]).to.have.property(\"is_active\").to.equal(false)",
                  "err": {},
                  "uuid": "353451ae-8573-4109-8f85-3cc5fc7a1f78",
                  "parentUUID": "9d88b247-8e0a-4c02-8539-474d250fab40",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "when user hit api get detail with wrong id then user got response error",
                  "fullTitle": "API Extension Clause Get Detail Extension Clause when user hit api get detail with wrong id then user got response error",
                  "timedOut": false,
                  "duration": 58,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const res = await EC_Getdetail.getdetailExtensionClause(datas.Extension_clause.wrongid)\nassert(res.status).to.equal(404)\nassert(res.body.response_desc.id).to.equal('error data tidak ditemukan')",
                  "err": {},
                  "uuid": "cbc3091a-23fc-4d3d-b7a0-abad71ad9e06",
                  "parentUUID": "9d88b247-8e0a-4c02-8539-474d250fab40",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "353451ae-8573-4109-8f85-3cc5fc7a1f78",
                "cbc3091a-23fc-4d3d-b7a0-abad71ad9e06"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 121,
              "root": false,
              "rootEmpty": false,
              "_timeout": 180000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 180000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 180000
    }
  ],
  "meta": {
    "mocha": {
      "version": "9.2.2"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "reports/mochawesome/"
      },
      "version": "6.2.0"
    }
  }
}